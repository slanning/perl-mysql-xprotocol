package Mysqlx;

# This is how Mysqlx.pm was generated (I think Google::ProtocolBuffers::Generated needs to be installed):
# The .proto files were from:
# https://github.com/mysql/mysql-server/tree/5.7/rapid/plugin/x/protocol
# protoc --perl-gpd_out=package=Mysqlx,pb_prefix=Mysqlx,prefix=Mysqlx:lib -I. ./*.proto
# test it: perl -Ilib -MMysqlx -E 'Mysqlx::Connection::Capability->new'

use strict;
use warnings;
use MIME::Base64 qw();
use Google::ProtocolBuffers::Dynamic;

my $gpd = Google::ProtocolBuffers::Dynamic->new;

$gpd->load_serialized_string(MIME::Base64::decode_base64(<<'EOD'));
CrkbChZteXNxbHhfZGF0YXR5cGVzLnByb3RvEhBNeXNxbHguRGF0YXR5cGVzIsYDCgZTY2FsYXIS
KwoEdHlwZRgBIAIoDjIdLk15c3FseC5EYXRhdHlwZXMuU2NhbGFyLlR5cGUSFAoMdl9zaWduZWRf
aW50GAIgASgSEhYKDnZfdW5zaWduZWRfaW50GAMgASgEEjEKCHZfb2N0ZXRzGAUgASgLMh8uTXlz
cWx4LkRhdGF0eXBlcy5TY2FsYXIuT2N0ZXRzEhAKCHZfZG91YmxlGAYgASgBEg8KB3ZfZmxvYXQY
ByABKAISDgoGdl9ib29sGAggASgIEjEKCHZfc3RyaW5nGAkgASgLMh8uTXlzcWx4LkRhdGF0eXBl
cy5TY2FsYXIuU3RyaW5nGioKBlN0cmluZxINCgV2YWx1ZRgBIAIoDBIRCgljb2xsYXRpb24YAiAB
KAQaLQoGT2N0ZXRzEg0KBXZhbHVlGAEgAigMEhQKDGNvbnRlbnRfdHlwZRgCIAEoDSJtCgRUeXBl
EgoKBlZfU0lOVBABEgoKBlZfVUlOVBACEgoKBlZfTlVMTBADEgwKCFZfT0NURVRTEAQSDAoIVl9E
T1VCTEUQBRILCgdWX0ZMT0FUEAYSCgoGVl9CT09MEAcSDAoIVl9TVFJJTkcQCCJ9CgZPYmplY3QS
MQoDZmxkGAEgAygLMiQuTXlzcWx4LkRhdGF0eXBlcy5PYmplY3QuT2JqZWN0RmllbGQaQAoLT2Jq
ZWN0RmllbGQSCwoDa2V5GAEgAigJEiQKBXZhbHVlGAIgAigLMhUuTXlzcWx4LkRhdGF0eXBlcy5B
bnkiLQoFQXJyYXkSJAoFdmFsdWUYASADKAsyFS5NeXNxbHguRGF0YXR5cGVzLkFueSLTAQoDQW55
EigKBHR5cGUYASACKA4yGi5NeXNxbHguRGF0YXR5cGVzLkFueS5UeXBlEigKBnNjYWxhchgCIAEo
CzIYLk15c3FseC5EYXRhdHlwZXMuU2NhbGFyEiUKA29iahgDIAEoCzIYLk15c3FseC5EYXRhdHlw
ZXMuT2JqZWN0EiYKBWFycmF5GAQgASgLMhcuTXlzcWx4LkRhdGF0eXBlcy5BcnJheSIpCgRUeXBl
EgoKBlNDQUxBUhABEgoKBk9CSkVDVBACEgkKBUFSUkFZEANCHgocY29tLm15c3FsLmNqLm15c3Fs
eC5wcm90b2J1ZkqfFAoGEgQAAEoBCggKAQISAwQIGAoICgEIEgMFADUKCwoECOcHABIDBQA1CgwK
BQjnBwACEgMFBxMKDQoGCOcHAAIAEgMFBxMKDgoHCOcHAAIAARIDBQcTCgwKBQjnBwAHEgMFFjQK
FgoCBAASBAkALAEaCiBhIHNjYWxhcgoKCgoDBAABEgMJCA4KMQoEBAADABIECwIOAxojIGEgc3Ry
aW5nIHdpdGggYSBjaGFyc2V0L2NvbGxhdGlvbgoKDAoFBAADAAESAwsKEAoNCgYEAAMAAgASAwwE
HQoOCgcEAAMAAgAEEgMMBAwKDgoHBAADAAIABRIDDA0SCg4KBwQAAwACAAESAwwTGAoOCgcEAAMA
AgADEgMMGxwKDQoGBAADAAIBEgMNBCIKDgoHBAADAAIBBBIDDQQMCg4KBwQAAwACAQUSAw0NEwoO
CgcEAAMAAgEBEgMNFB0KDgoHBAADAAIBAxIDDSAhCooBCgQEAAMBEgQSABUBGnwgYW4gb3BhcXVl
IG9jdGV0IHNlcXVlbmNlLCB3aXRoIGFuIG9wdGlvbmFsIGNvbnRlbnRfdHlwZQogU2VlIGBgTXlz
cWx4LlJlc3VsdHNldC5Db2x1bW5NZXRhZGF0YWBgIGZvciBsaXN0IG9mIGtub3duIHZhbHVlcy4K
CgwKBQQAAwEBEgMSCA4KDQoGBAADAQIAEgMTAhsKDgoHBAADAQIABBIDEwIKCg4KBwQAAwECAAUS
AxMLEAoOCgcEAAMBAgABEgMTERYKDgoHBAADAQIAAxIDExkaCg0KBgQAAwECARIDFAIjCg4KBwQA
AwECAQQSAxQCCgoOCgcEAAMBAgEFEgMUCxEKDgoHBAADAQIBARIDFBIeCg4KBwQAAwECAQMSAxQh
IgoMCgQEAAQAEgQXAiADCgwKBQQABAABEgMXBwsKDQoGBAAEAAIAEgMYBA8KDgoHBAAEAAIAARID
GAQKCg4KBwQABAACAAISAxgNDgoNCgYEAAQAAgESAxkEDwoOCgcEAAQAAgEBEgMZBAoKDgoHBAAE
AAIBAhIDGQ0OCg0KBgQABAACAhIDGgQPCg4KBwQABAACAgESAxoECgoOCgcEAAQAAgICEgMaDQ4K
DQoGBAAEAAIDEgMbBBEKDgoHBAAEAAIDARIDGwQMCg4KBwQABAACAwISAxsPEAoNCgYEAAQAAgQS
AxwEEQoOCgcEAAQAAgQBEgMcBAwKDgoHBAAEAAIEAhIDHA8QCg0KBgQABAACBRIDHQQQCg4KBwQA
BAACBQESAx0ECwoOCgcEAAQAAgUCEgMdDg8KDQoGBAAEAAIGEgMeBBAKDgoHBAAEAAIGARIDHgQK
Cg4KBwQABAACBgISAx4ODwoNCgYEAAQAAgcSAx8EEgoOCgcEAAQAAgcBEgMfBAwKDgoHBAAEAAIH
AhIDHxARCgsKBAQAAgASAyICGQoMCgUEAAIABBIDIgIKCgwKBQQAAgAGEgMiCw8KDAoFBAACAAES
AyIQFAoMCgUEAAIAAxIDIhcYCgsKBAQAAgESAyQCIwoMCgUEAAIBBBIDJAIKCgwKBQQAAgEFEgMk
CxEKDAoFBAACAQESAyQSHgoMCgUEAAIBAxIDJCEiCgsKBAQAAgISAyUCJQoMCgUEAAICBBIDJQIK
CgwKBQQAAgIFEgMlCxEKDAoFBAACAgESAyUSIAoMCgUEAAICAxIDJSMkCkkKBAQAAgMSAycCHxo8
IDQgaXMgdW51c2VkLCB3YXMgTnVsbCB3aGljaCBkb2Vzbid0IGhhdmUgYSBzdG9yYWdlIGFueW1v
cmUKCgwKBQQAAgMEEgMnAgoKDAoFBAACAwYSAycLEQoMCgUEAAIDARIDJxIaCgwKBQQAAgMDEgMn
HR4KCwoEBAACBBIDKAIfCgwKBQQAAgQEEgMoAgoKDAoFBAACBAUSAygLEQoMCgUEAAIEARIDKBIa
CgwKBQQAAgQDEgMoHR4KCwoEBAACBRIDKQIeCgwKBQQAAgUEEgMpAgoKDAoFBAACBQUSAykLEAoM
CgUEAAIFARIDKRIZCgwKBQQAAgUDEgMpHB0KCwoEBAACBhIDKgIdCgwKBQQAAgYEEgMqAgoKDAoF
BAACBgUSAyoLDwoMCgUEAAIGARIDKhIYCgwKBQQAAgYDEgMqGxwKCwoEBAACBxIDKwIfCgwKBQQA
AgcEEgMrAgoKDAoFBAACBwYSAysLEQoMCgUEAAIHARIDKxIaCgwKBQQAAgcDEgMrHR4KFgoCBAES
BC8ANgEaCiBhIG9iamVjdAoKCgoDBAEBEgMvCA4KDAoEBAEDABIEMAIzAwoMCgUEAQMAARIDMAoV
Cg0KBgQBAwACABIDMQQcCg4KBwQBAwACAAQSAzEEDAoOCgcEAQMAAgAFEgMxDRMKDgoHBAEDAAIA
ARIDMRQXCg4KBwQBAwACAAMSAzEaGwoNCgYEAQMAAgESAzIEGwoOCgcEAQMAAgEEEgMyBAwKDgoH
BAEDAAIBBhIDMg0QCg4KBwQBAwACAQESAzIRFgoOCgcEAQMAAgEDEgMyGRoKCwoEBAECABIDNQIf
CgwKBQQBAgAEEgM1AgoKDAoFBAECAAYSAzULFgoMCgUEAQIAARIDNRcaCgwKBQQBAgADEgM1HR4K
FQoCBAISBDkAOwEaCSBhIEFycmF5CgoKCgMEAgESAzkIDQoLCgQEAgIAEgM6AhkKDAoFBAICAAQS
AzoCCgoMCgUEAgIABhIDOgsOCgwKBQQCAgABEgM6DxQKDAoFBAICAAMSAzoXGAovCgIEAxIEPgBK
ARojIGEgaGVscGVyIHRvIGFsbG93IGFsbCBmaWVsZCB0eXBlcwoKCgoDBAMBEgM+CAsKDAoEBAME
ABIEPwJDAwoMCgUEAwQAARIDPwcLCg0KBgQDBAACABIDQAQPCg4KBwQDBAACAAESA0AECgoOCgcE
AwQAAgACEgNADQ4KDQoGBAMEAAIBEgNBBA8KDgoHBAMEAAIBARIDQQQKCg4KBwQDBAACAQISA0EN
DgoNCgYEAwQAAgISA0IEDwoOCgcEAwQAAgIBEgNCBAkKDgoHBAMEAAICAhIDQg0OCgsKBAQDAgAS
A0UCGQoMCgUEAwIABBIDRQIKCgwKBQQDAgAGEgNFCw8KDAoFBAMCAAESA0UQFAoMCgUEAwIAAxID
RRcYCgsKBAQDAgESA0cCHQoMCgUEAwIBBBIDRwIKCgwKBQQDAgEGEgNHCxEKDAoFBAMCAQESA0cS
GAoMCgUEAwIBAxIDRxscCgsKBAQDAgISA0gCHQoMCgUEAwICBBIDSAIKCgwKBQQDAgIGEgNICxEK
DAoFBAMCAgESA0gSFQoMCgUEAwICAxIDSBscCgsKBAQDAgMSA0kCHQoMCgUEAwIDBBIDSQIKCgwK
BQQDAgMGEgNJCxAKDAoFBAMCAwESA0kSFwoMCgUEAwIDAxIDSRscCogMChdteXNxbHhfY29ubmVj
dGlvbi5wcm90bxIRTXlzcWx4LkNvbm5lY3Rpb24aFm15c3FseF9kYXRhdHlwZXMucHJvdG8iQAoK
Q2FwYWJpbGl0eRIMCgRuYW1lGAEgAigJEiQKBXZhbHVlGAIgAigLMhUuTXlzcWx4LkRhdGF0eXBl
cy5BbnkiQwoMQ2FwYWJpbGl0aWVzEjMKDGNhcGFiaWxpdGllcxgBIAMoCzIdLk15c3FseC5Db25u
ZWN0aW9uLkNhcGFiaWxpdHkiEQoPQ2FwYWJpbGl0aWVzR2V0IkgKD0NhcGFiaWxpdGllc1NldBI1
CgxjYXBhYmlsaXRpZXMYASACKAsyHy5NeXNxbHguQ29ubmVjdGlvbi5DYXBhYmlsaXRpZXMiBwoF
Q2xvc2VCHgocY29tLm15c3FsLmNqLm15c3FseC5wcm90b2J1Zkq0CQoGEgQAAC4CCgkKAgMAEgME
Bx8KCAoBAhIDBggZCggKAQgSAwcANQoLCgQI5wcAEgMHADUKDAoFCOcHAAISAwcHEwoNCgYI5wcA
AgASAwcHEwoOCgcI5wcAAgABEgMHBxMKDAoFCOcHAAcSAwcWNApeCgIEABIEDAAPARpSIGEgQ2Fw
YWJpbGl0eQoKIGEgdHVwbGUgb2YgYSBgYG5hbWVgYCBhbmQgYSA6cHJvdG9idWY6bXNnOmBNeXNx
bHguRGF0YXR5cGVzOjpBbnlgCgoKCgMEAAESAwwIEgoLCgQEAAIAEgMNAhsKDAoFBAACAAQSAw0C
CgoMCgUEAAIABRIDDQsRCgwKBQQAAgABEgMNEhYKDAoFBAACAAMSAw0ZGgoLCgQEAAIBEgMOAioK
DAoFBAACAQQSAw4CCgoMCgUEAAIBBhIDDgsfCgwKBQQAAgEBEgMOICUKDAoFBAACAQMSAw4oKQoa
CgIEARIEEgAUARoOIENhcGFiaWxpdGllcwoKCgoDBAEBEgMSCBQKCwoEBAECABIDEwInCgwKBQQB
AgAEEgMTAgoKDAoFBAECAAYSAxMLFQoMCgUEAQIAARIDExYiCgwKBQQBAgADEgMTJSYKrAEKAgQC
EgQaABsBGp8BIGdldCBzdXBwb3J0ZWQgY29ubmVjdGlvbiBjYXBhYmlsaXRpZXMgYW5kIHRoZWly
IGN1cnJlbnQgc3RhdGUKCiAgIDpyZXR1cm5zOiA6cHJvdG9idWY6bXNnOmBNeXNxbHguQ29ubmVj
dGlvbjo6Q2FwYWJpbGl0aWVzYCBvciA6cHJvdG9idWY6bXNnOmBNeXNxbHg6OkVycm9yYAoKCgoK
AwQCARIDGggXCpwCCgIEAxIEJAAmARqPAiBzZXRzIGNvbm5lY3Rpb24gY2FwYWJpbGl0aWVzIGF0
b21pY2FsbHkKCiBvbmx5IHByb3ZpZGVkIHZhbHVlcyBhcmUgY2hhbmdlZCwgb3RoZXIgdmFsdWVz
IGFyZSBsZWZ0IHVuY2hhbmdlZC4KIElmIGFueSBvZiB0aGUgY2hhbmdlcyBmYWlscywgYWxsIGNo
YW5nZXMgYXJlIGRpc2NhcmRlZC4KCiA6cHJlY29uZDogYWN0aXZlIHNlc3Npb25zID09IDAKIDpy
ZXR1cm5zOiA6cHJvdG9idWY6bXNnOmBNeXNxbHg6Ok9rYCBvciA6cHJvdG9idWY6bXNnOmBNeXNx
bHg6OkVycm9yYAoKCgoDBAMBEgMkCBcKCwoEBAMCABIDJQIpCgwKBQQDAgAEEgMlAgoKDAoFBAMC
AAYSAyULFwoMCgUEAwIAARIDJRgkCgwKBQQDAgADEgMlJygKqAEKAgQEEgQtAC4BGpsBIGFubm91
bmNlIHRvIHRoZSBzZXJ2ZXIgdGhhdCB0aGUgY2xpZW50IHdhbnRzIHRvIGNsb3NlIHRoZSBjb25u
ZWN0aW9uCgogaXQgZGlzY2FyZHMgYW55IHNlc3Npb24gc3RhdGUgb2YgdGhlIHNlcnZlcgoKIDpS
ZXR1cm5zOiA6cHJvdG9idWY6bXNnOmBNeXNxbHg6Ok9rYAoKCgoDBAQBEgMtCA0KyjwKEW15c3Fs
eF9leHByLnByb3RvEgtNeXNxbHguRXhwchoWbXlzcWx4X2RhdGF0eXBlcy5wcm90byLEAwoERXhw
chIkCgR0eXBlGAEgAigOMhYuTXlzcWx4LkV4cHIuRXhwci5UeXBlEjEKCmlkZW50aWZpZXIYAiAB
KAsyHS5NeXNxbHguRXhwci5Db2x1bW5JZGVudGlmaWVyEhAKCHZhcmlhYmxlGAMgASgJEikKB2xp
dGVyYWwYBCABKAsyGC5NeXNxbHguRGF0YXR5cGVzLlNjYWxhchIwCg1mdW5jdGlvbl9jYWxsGAUg
ASgLMhkuTXlzcWx4LkV4cHIuRnVuY3Rpb25DYWxsEicKCG9wZXJhdG9yGAYgASgLMhUuTXlzcWx4
LkV4cHIuT3BlcmF0b3ISEAoIcG9zaXRpb24YByABKA0SIwoGb2JqZWN0GAggASgLMhMuTXlzcWx4
LkV4cHIuT2JqZWN0EiEKBWFycmF5GAkgASgLMhIuTXlzcWx4LkV4cHIuQXJyYXkicQoEVHlwZRIJ
CgVJREVOVBABEgsKB0xJVEVSQUwQAhIMCghWQVJJQUJMRRADEg0KCUZVTkNfQ0FMTBAEEgwKCE9Q
RVJBVE9SEAUSDwoLUExBQ0VIT0xERVIQBhIKCgZPQkpFQ1QQBxIJCgVBUlJBWRAIIi8KCklkZW50
aWZpZXISDAoEbmFtZRgBIAIoCRITCgtzY2hlbWFfbmFtZRgCIAEoCSLLAQoQRG9jdW1lbnRQYXRo
SXRlbRIwCgR0eXBlGAEgAigOMiIuTXlzcWx4LkV4cHIuRG9jdW1lbnRQYXRoSXRlbS5UeXBlEg0K
BXZhbHVlGAIgASgJEg0KBWluZGV4GAMgASgNImcKBFR5cGUSCgoGTUVNQkVSEAESEwoPTUVNQkVS
X0FTVEVSSVNLEAISDwoLQVJSQVlfSU5ERVgQAxIYChRBUlJBWV9JTkRFWF9BU1RFUklTSxAEEhMK
D0RPVUJMRV9BU1RFUklTSxAFIn8KEENvbHVtbklkZW50aWZpZXISNAoNZG9jdW1lbnRfcGF0aBgB
IAMoCzIdLk15c3FseC5FeHByLkRvY3VtZW50UGF0aEl0ZW0SDAoEbmFtZRgCIAEoCRISCgp0YWJs
ZV9uYW1lGAMgASgJEhMKC3NjaGVtYV9uYW1lGAQgASgJIlcKDEZ1bmN0aW9uQ2FsbBIlCgRuYW1l
GAEgAigLMhcuTXlzcWx4LkV4cHIuSWRlbnRpZmllchIgCgVwYXJhbRgCIAMoCzIRLk15c3FseC5F
eHByLkV4cHIiOgoIT3BlcmF0b3ISDAoEbmFtZRgBIAIoCRIgCgVwYXJhbRgCIAMoCzIRLk15c3Fs
eC5FeHByLkV4cHIidAoGT2JqZWN0EiwKA2ZsZBgBIAMoCzIfLk15c3FseC5FeHByLk9iamVjdC5P
YmplY3RGaWVsZBo8CgtPYmplY3RGaWVsZBILCgNrZXkYASACKAkSIAoFdmFsdWUYAiACKAsyES5N
eXNxbHguRXhwci5FeHByIikKBUFycmF5EiAKBXZhbHVlGAEgAygLMhEuTXlzcWx4LkV4cHIuRXhw
ckIeChxjb20ubXlzcWwuY2oubXlzcWx4LnByb3RvYnVmSvIyCgcSBQAA6gEBCskCCgECEgMRCBMa
vgIgRXhwcmVzc2lvbiBzeW50YXgKCiBleHByIGlzIHRoZSBmdW5kYW1lbnRhbCBzdHJ1Y3R1cmUg
aW4gdmFyaW91cyBwbGFjZXMKIG9mIHRoZSBTUUwgbGFuZ3VhZ2U6CgogKiBgYFNFTEVDVCA8ZXhw
cj4gQVMgLi4uYGAKICogYGBXSEVSRSA8ZXhwcj5gYAoKIFRoZSBzdHJ1Y3R1cmVzIGNhbiBiZSB1
c2VkIHRvOgoKICogYnVpbGQgYW4gSXRlbS10cmVlIGluIHRoZSBNeVNRTCBTZXJ2ZXIKICogZ2Vu
ZXJhdGUgU1FMIGZyb20gaXQKICogdXNlIGFzIGZpbHRlciBjb25kaXRpb24gaW4gQ1JVRCdzIEZp
bmQoKSwgVXBkYXRlKCkgYW5kIERlbGV0ZSgpIGNhbGxzLgoKCAoBCBIDEgA1CgsKBAjnBwASAxIA
NQoMCgUI5wcAAhIDEgcTCg0KBgjnBwACABIDEgcTCg4KBwjnBwACAAESAxIHEwoMCgUI5wcABxID
EhY0CgkKAgMAEgMUBx8K/wMKAgQAEgQnAD0BGvIDIEV4cHJlc3Npb25zCgogdGhlICJyb290IiBv
ZiB0aGUgZXhwcmVzc2lvbiB0cmVlCgogLi4gcHJvZHVjdGlvbmxpc3Q6OgogICBleHByOiBgb3Bl
cmF0b3JgIHwKICAgICAgIDogYGlkZW50aWZpZXJgIHwKICAgICAgIDogYGZ1bmN0aW9uX2NhbGxg
IHwKICAgICAgIDogdmFyaWFibGUgfAogICAgICAgOiBgbGl0ZXJhbGAgfAogICAgICAgOiBwbGFj
ZWhvbGRlcgoKIElmIGV4cHJlc3Npb24gdHlwZSBpcyBQTEFDRUhPTERFUiB0aGVuIGl0IHJlZmVy
cyB0byB0aGUgdmFsdWUgb2YgYSBwYXJhbWV0ZXIKIHNwZWNpZmllZCB3aGVuIGV4ZWN1dGluZyBh
IHN0YXRlbWVudCAoc2VlIGBhcmdzYCBmaWVsZCBvZiBgU3RtdEV4ZWN1dGVgIGNvbW1hbmQpLgog
RmllbGQgYHBvc2l0aW9uYCAod2hpY2ggbXVzdCBiZSBwcmVzZW50IGZvciBzdWNoIGFuIGV4cHJl
c3Npb24pIGdpdmVzIDAtYmFzZWQKIHBvc2l0aW9uIG9mIHRoZSBwYXJhbWV0ZXIgaW4gdGhlIHBh
cmFtZXRlciBsaXN0LgoKCgoKAwQAARIDJwgMCgwKBAQABAASBCgCMQMKDAoFBAAEAAESAygHCwoN
CgYEAAQAAgASAykEFwoOCgcEAAQAAgABEgMpBAkKDgoHBAAEAAIAAhIDKRUWCg0KBgQABAACARID
KgQXCg4KBwQABAACAQESAyoECwoOCgcEAAQAAgECEgMqFRYKDQoGBAAEAAICEgMrBBcKDgoHBAAE
AAICARIDKwQMCg4KBwQABAACAgISAysVFgoNCgYEAAQAAgMSAywEFwoOCgcEAAQAAgMBEgMsBA0K
DgoHBAAEAAIDAhIDLBUWCg0KBgQABAACBBIDLQQXCg4KBwQABAACBAESAy0EDAoOCgcEAAQAAgQC
EgMtFRYKDQoGBAAEAAIFEgMuBBcKDgoHBAAEAAIFARIDLgQPCg4KBwQABAACBQISAy4VFgoNCgYE
AAQAAgYSAy8EFwoOCgcEAAQAAgYBEgMvBAoKDgoHBAAEAAIGAhIDLxUWCg0KBgQABAACBxIDMAQX
Cg4KBwQABAACBwESAzAECQoOCgcEAAQAAgcCEgMwFRYKCwoEBAACABIDMwIZCgwKBQQAAgAEEgMz
AgoKDAoFBAACAAYSAzMLDwoMCgUEAAIAARIDMxAUCgwKBQQAAgADEgMzFxgKCwoEBAACARIDNQIr
CgwKBQQAAgEEEgM1AgoKDAoFBAACAQYSAzULGwoMCgUEAAIBARIDNRwmCgwKBQQAAgEDEgM1KSoK
CwoEBAACAhIDNgIlCgwKBQQAAgIEEgM2AgoKDAoFBAACAgUSAzYLEQoMCgUEAAICARIDNhggCgwK
BQQAAgIDEgM2IyQKCwoEBAACAxIDNwIvCgwKBQQAAgMEEgM3AgoKDAoFBAACAwYSAzcLIgoMCgUE
AAIDARIDNyMqCgwKBQQAAgMDEgM3LS4KCwoEBAACBBIDOAIqCgwKBQQAAgQEEgM4AgoKDAoFBAAC
BAYSAzgLFwoMCgUEAAIEARIDOBglCgwKBQQAAgQDEgM4KCkKCwoEBAACBRIDOQIlCgwKBQQAAgUE
EgM5AgoKDAoFBAACBQYSAzkLEwoMCgUEAAIFARIDORggCgwKBQQAAgUDEgM5IyQKCwoEBAACBhID
OgIlCgwKBQQAAgYEEgM6AgoKDAoFBAACBgUSAzoLEQoMCgUEAAIGARIDOhggCgwKBQQAAgYDEgM6
IyQKCwoEBAACBxIDOwIjCgwKBQQAAgcEEgM7AgoKDAoFBAACBwYSAzsLEQoMCgUEAAIHARIDOxge
CgwKBQQAAgcDEgM7ISIKCwoEBAACCBIDPAIiCgwKBQQAAggEEgM8AgoKDAoFBAACCAYSAzwLEAoM
CgUEAAIIARIDPBgdCgwKBQQAAggDEgM8ICEKegoCBAESBEQARwEabiBpZGVudGlmaWVyOiBuYW1l
LCBzY2hhbWUubmFtZQoKIC4uIHByb2R1Y3Rpb25saXN0OjoKICAgaWRlbnRpZmllcjogc3RyaW5n
ICIuIiBzdHJpbmcgfAogICAgICAgICAgICAgOiBzdHJpbmcKCgoKAwQBARIDRAgSCgsKBAQBAgAS
A0UCGwoMCgUEAQIABBIDRQIKCgwKBQQBAgAFEgNFCxEKDAoFBAECAAESA0USFgoMCgUEAQIAAxID
RRkaCgsKBAQBAgESA0YCIgoMCgUEAQIBBBIDRgIKCgwKBQQBAgEFEgNGCxEKDAoFBAECAQESA0YS
HQoMCgUEAQIBAxIDRiAhCvQBCgIEAhIEUQBcARrnASBEb2N1bWVudFBhdGhJdGVtCgogLi4gcHJv
ZHVjdGlvbmxpc3Q6OgogICAgZG9jdW1lbnRfcGF0aDogcGF0aF9pdGVtIHwgcGF0aF9pdGVtIGRv
Y3VtZW50X3BhdGgKICAgIHBhdGhfaXRlbSAgICA6IG1lbWJlciB8IGFycmF5X2luZGV4IHwgIioq
IgogICAgbWVtYmVyICAgICAgIDogIi4iIHN0cmluZyB8ICIuIiAiKiIKICAgIGFycmF5X2luZGV4
ICA6ICJbIiBudW1iZXIgIl0iIHwgIlsiICIqIiAiXSIKCgoKCgMEAgESA1EIGAoMCgQEAgQAEgRS
AlgDCgwKBQQCBAABEgNSBwsKGAoGBAIEAAIAEgNTBA8iCSAubWVtYmVyCgoOCgcEAgQAAgABEgNT
BAoKDgoHBAIEAAIAAhIDUw0OChMKBgQCBAACARIDVAQYIgQgLioKCg4KBwQCBAACAQESA1QEEwoO
CgcEAgQAAgECEgNUFhcKGAoGBAIEAAICEgNVBBQiCSBbaW5kZXhdCgoOCgcEAgQAAgIBEgNVBA8K
DgoHBAIEAAICAhIDVRITChQKBgQCBAACAxIDVgQdIgUgWypdCgoOCgcEAgQAAgMBEgNWBBgKDgoH
BAIEAAIDAhIDVhscChMKBgQCBAACBBIDVwQYIgQgKioKCg4KBwQCBAACBAESA1cEEwoOCgcEAgQA
AgQCEgNXFhcKCwoEBAICABIDWQIZCgwKBQQCAgAEEgNZAgoKDAoFBAICAAYSA1kLDwoMCgUEAgIA
ARIDWRAUCgwKBQQCAgADEgNZFxgKCwoEBAICARIDWgIcCgwKBQQCAgEEEgNaAgoKDAoFBAICAQUS
A1oLEQoMCgUEAgIBARIDWhIXCgwKBQQCAgEDEgNaGhsKCwoEBAICAhIDWwIcCgwKBQQCAgIEEgNb
AgoKDAoFBAICAgUSA1sLEQoMCgUEAgICARIDWxIXCgwKBQQCAgIDEgNbGhsK7gQKAgQDEgRvAHQB
GuEEIGNvbF9pZGVudGlmaWVyICh0YWJsZSk6IGNvbEBkb2NfcGF0aCwgdGJsLmNvbEBkb2NfcGF0
aCBjb2wsIHRibC5jb2wsIHNjaGVtYS50YmwuY29sCiBjb2xfaWRlbnRpZmllciAoZG9jdW1lbnQp
OiBkb2NfcGF0aAoKIC4uIHByb2R1Y3Rpb25saXN0OjoKICAgY29sX2lkZW50aWZpZXI6IHN0cmlu
ZyAiLiIgc3RyaW5nICIuIiBzdHJpbmcgfAogICAgICAgICAgICAgOiBzdHJpbmcgIi4iIHN0cmlu
ZyB8CiAgICAgICAgICAgICA6IHN0cmluZyB8CiAgICAgICAgICAgICA6IHN0cmluZyAiLiIgc3Ry
aW5nICIuIiBzdHJpbmcgIkAiIGRvY3VtZW50X3BhdGggfAogICAgICAgICAgICAgOiBzdHJpbmcg
Ii4iIHN0cmluZyAiQCIgZG9jdW1lbnRfcGF0aCB8CiAgICAgICAgICAgICA6IHN0cmluZyAiQCIg
ZG9jdW1lbnRfcGF0aCB8CiAgICAgICAgICAgICA6IGRvY3VtZW50X3BhdGgKICAgIGRvY3VtZW50
X3BhdGg6IG1lbWJlciB8IGFycmF5TG9jYXRpb24gfCBkb3VibGVBc3RlcmlzawogICAgbWVtYmVy
ID0gIi4iIHN0cmluZyB8ICIuIiAiKiIKICAgIGFycmF5TG9jYXRpb24gPSAiWyIgaW5kZXggIl0i
IHwgIlsiICIqIiAiXSIKICAgIGRvdWJsZUFzdGVyaXNrID0gIioqIgoKCgoKAwQDARIDbwgYCgsK
BAQDAgASA3ACOgoMCgUEAwIABBIDcAIKCgwKBQQDAgAGEgNwCycKDAoFBAMCAAESA3AoNQoMCgUE
AwIAAxIDcDg5CgsKBAQDAgESA3ECGwoMCgUEAwIBBBIDcQIKCgwKBQQDAgEFEgNxCxEKDAoFBAMC
AQESA3ESFgoMCgUEAwIBAxIDcRkaCgsKBAQDAgISA3ICIQoMCgUEAwICBBIDcgIKCgwKBQQDAgIF
EgNyCxEKDAoFBAMCAgESA3ISHAoMCgUEAwICAxIDch8gCgsKBAQDAgMSA3MCIgoMCgUEAwIDBBID
cwIKCgwKBQQDAgMFEgNzCxEKDAoFBAMCAwESA3MSHQoMCgUEAwIDAxIDcyAhCooBCgIEBBIEegB9
ARp+IGZ1bmN0aW9uIGNhbGw6IGBgZnVuYyhhLCBiLCAiMSIsIDMpYGAKCiAuLiBwcm9kdWN0aW9u
bGlzdDo6CiAgIGZ1bmN0aW9uX2NhbGw6IGBpZGVudGlmaWVyYCAiKCIgWyBgZXhwcmAgWyIsIiBg
ZXhwcmAgXSogXSAiKSIKCgoKAwQEARIDeggUCgsKBAQEAgASA3sCHwoMCgUEBAIABBIDewIKCgwK
BQQEAgAGEgN7CxUKDAoFBAQCAAESA3sWGgoMCgUEBAIAAxIDex0eCgsKBAQEAgESA3wCGgoMCgUE
BAIBBBIDfAIKCgwKBQQEAgEGEgN8Cw8KDAoFBAQCAQESA3wQFQoMCgUEBAIBAxIDfBgZCvQMCgIE
BRIG2AEA2wEBGuUMIG9wZXJhdG9yOiBgYDw8KGEsIGIpYGAKCiAuLiBub3RlOjoKCiAgIE5vbi1h
dXRob3JpdGF0aXZlIGxpc3Qgb2Ygb3BlcmF0b3JzIGltcGxlbWVudGVkIChjYXNlIHNlbnNpdGl2
ZSk6CgogICBOdWxsYXJ5CiAgICAgKiBgYCpgYAogICAgICogYGBkZWZhdWx0YGAKCiAgIFVuYXJ5
CiAgICAgKiBgYCFgYAogICAgICogYGBzaWduX3BsdXNgYAogICAgICogYGBzaWduX21pbnVzYGAK
ICAgICAqIGBgfmBgCgogICBCaW5hcnkKICAgICAqIGBgJiZgYAogICAgICogYGB8fGBgCiAgICAg
KiBgYHhvcmBgCiAgICAgKiBgYD09YGAKICAgICAqIGBgIT1gYAogICAgICogYGA+YGAKICAgICAq
IGBgPj1gYAogICAgICogYGA8YGAKICAgICAqIGBgPD1gYAogICAgICogYGAmYGAKICAgICAqIGBg
fGBgCiAgICAgKiBgYF5gYAogICAgICogYGA8PGBgCiAgICAgKiBgYD4+YGAKICAgICAqIGBgK2Bg
CiAgICAgKiBgYC1gYAogICAgICogYGAqYGAKICAgICAqIGBgL2BgCiAgICAgKiBgYGRpdmBgCiAg
ICAgKiBgYCVgYAogICAgICogYGBpc2BgCiAgICAgKiBgYGlzX25vdGBgCiAgICAgKiBgYHJlZ2V4
cGBgCiAgICAgKiBgYG5vdF9yZWdleHBgYAogICAgICogYGBsaWtlYGAKICAgICAqIGBgbm90X2xp
a2VgYAogICAgICogYGBjYXN0YGAKCiAgIFVzaW5nIHNwZWNpYWwgcmVwcmVzZW50YXRpb24sIHdp
dGggbW9yZSB0aGFuIDIgcGFyYW1zCiAgICAgKiBgYGluYGAgKHBhcmFtWzBdIElOIChwYXJhbVsx
XSwgcGFyYW1bMl0sIC4uLikpCiAgICAgKiBgYG5vdF9pbmBgIChwYXJhbVswXSBOT1QgSU4gKHBh
cmFtWzFdLCBwYXJhbVsyXSwgLi4uKSkKCiAgIFRlcm5hcnkKICAgICAqIGBgYmV0d2VlbmBgCiAg
ICAgKiBgYGJldHdlZW5fbm90YGAKICAgICAqIGBgZGF0ZV9hZGRgYAogICAgICogYGBkYXRlX3N1
YmBgCgogICBVbml0cyBmb3IgZGF0ZV9hZGQvZGF0ZV9zdWIKICAgICAqIGBgTUlDUk9TRUNPTkRg
YAogICAgICogYGBTRUNPTkRgYAogICAgICogYGBNSU5VVEVgYAogICAgICogYGBIT1VSYGAKICAg
ICAqIGBgREFZYGAKICAgICAqIGBgV0VFS2BgCiAgICAgKiBgYE1PTlRIYGAKICAgICAqIGBgUVVB
UlRFUmBgCiAgICAgKiBgYFlFQVJgYAogICAgICogYGBTRUNPTkRfTUlDUk9TRUNPTkRgYAogICAg
ICogYGBNSU5VVEVfTUlDUk9TRUNPTkRgYAogICAgICogYGBNSU5VVEVfU0VDT05EYGAKICAgICAq
IGBgSE9VUl9NSUNST1NFQ09ORGBgCiAgICAgKiBgYEhPVVJfU0VDT05EYGAKICAgICAqIGBgSE9V
Ul9NSU5VVEVgYAogICAgICogYGBEQVlfTUlDUk9TRUNPTkRgYAogICAgICogYGBEQVlfU0VDT05E
YGAKICAgICAqIGBgREFZX01JTlVURWBgCiAgICAgKiBgYERBWV9IT1VSYGAKCiAgIFR5cGVzIGZv
ciBjYXN0CiAgICAgKiBgYEJJTkFSWVsoTildYGAKICAgICAqIGBgQ0hBUlsoTildYGAKICAgICAq
IGBgREFURWBgCiAgICAgKiBgYERBVEVUSU1FYGAKICAgICAqIGBgREVDSU1BTFsoTVssRF0pXWBg
CiAgICAgKiBgYEpTT05gYAogICAgICogYGBTSUdORUQgW0lOVEVHRVJdYGAKICAgICAqIGBgVElN
RWBgCiAgICAgKiBgYFVOU0lHTkVEIFtJTlRFR0VSXWBgCgogLi4gcHJvZHVjdGlvbmxpc3Q6Ogog
ICBvcGVyYXRvcjogYG5hbWVgICIoIiBbIGBleHByYCBbIiwiIGBleHByYCBdKiBdICIpIgoKCwoD
BAUBEgTYAQgQCgwKBAQFAgASBNkBAhsKDQoFBAUCAAQSBNkBAgoKDQoFBAUCAAUSBNkBCxEKDQoF
BAUCAAESBNkBEhYKDQoFBAUCAAMSBNkBGRoKDAoEBAUCARIE2gECGgoNCgUEBQIBBBIE2gECCgoN
CgUEBQIBBhIE2gELDwoNCgUEBQIBARIE2gEQFQoNCgUEBQIBAxIE2gEYGQoyCgIEBhIG3gEA5QEB
GiQgYW4gb2JqZWN0ICh3aXRoIGV4cHJlc3Npb24gdmFsdWVzKQoKCwoDBAYBEgTeAQgOCg4KBAQG
AwASBt8BAuIBAwoNCgUEBgMAARIE3wEKFQoOCgYEBgMAAgASBOABBBwKDwoHBAYDAAIABBIE4AEE
DAoPCgcEBgMAAgAFEgTgAQ0TCg8KBwQGAwACAAESBOABFBcKDwoHBAYDAAIAAxIE4AEaGwoOCgYE
BgMAAgESBOEBBBwKDwoHBAYDAAIBBBIE4QEEDAoPCgcEBgMAAgEGEgThAQ0RCg8KBwQGAwACAQES
BOEBEhcKDwoHBAYDAAIBAxIE4QEaGwoMCgQEBgIAEgTkAQIfCg0KBQQGAgAEEgTkAQIKCg0KBQQG
AgAGEgTkAQsWCg0KBQQGAgABEgTkARcaCg0KBQQGAgADEgTkAR0eCiYKAgQHEgboAQDqAQEaGCBh
IEFycmF5IG9mIGV4cHJlc3Npb25zCgoLCgMEBwESBOgBCA0KDAoEBAcCABIE6QECGgoNCgUEBwIA
BBIE6QECCgoNCgUEBwIABhIE6QELDwoNCgUEBwIAARIE6QEQFQoNCgUEBwIAAxIE6QEYGQqVSgoR
bXlzcWx4X2NydWQucHJvdG8SC015c3FseC5DcnVkGhFteXNxbHhfZXhwci5wcm90bxoWbXlzcWx4
X2RhdGF0eXBlcy5wcm90byJbCgZDb2x1bW4SDAoEbmFtZRgBIAEoCRINCgVhbGlhcxgCIAEoCRI0
Cg1kb2N1bWVudF9wYXRoGAMgAygLMh0uTXlzcWx4LkV4cHIuRG9jdW1lbnRQYXRoSXRlbSI+CgpQ
cm9qZWN0aW9uEiEKBnNvdXJjZRgBIAIoCzIRLk15c3FseC5FeHByLkV4cHISDQoFYWxpYXMYAiAB
KAkiKgoKQ29sbGVjdGlvbhIMCgRuYW1lGAEgAigJEg4KBnNjaGVtYRgCIAEoCSIqCgVMaW1pdBIR
Cglyb3dfY291bnQYASACKAQSDgoGb2Zmc2V0GAIgASgEIn4KBU9yZGVyEh8KBGV4cHIYASACKAsy
ES5NeXNxbHguRXhwci5FeHByEjQKCWRpcmVjdGlvbhgCIAEoDjIcLk15c3FseC5DcnVkLk9yZGVy
LkRpcmVjdGlvbjoDQVNDIh4KCURpcmVjdGlvbhIHCgNBU0MQARIICgRERVNDEAIimgIKD1VwZGF0
ZU9wZXJhdGlvbhItCgZzb3VyY2UYASACKAsyHS5NeXNxbHguRXhwci5Db2x1bW5JZGVudGlmaWVy
EjoKCW9wZXJhdGlvbhgCIAIoDjInLk15c3FseC5DcnVkLlVwZGF0ZU9wZXJhdGlvbi5VcGRhdGVU
eXBlEiAKBXZhbHVlGAMgASgLMhEuTXlzcWx4LkV4cHIuRXhwciJ6CgpVcGRhdGVUeXBlEgcKA1NF
VBABEg8KC0lURU1fUkVNT1ZFEAISDAoISVRFTV9TRVQQAxIQCgxJVEVNX1JFUExBQ0UQBBIOCgpJ
VEVNX01FUkdFEAUSEAoMQVJSQVlfSU5TRVJUEAYSEAoMQVJSQVlfQVBQRU5EEAci8gIKBEZpbmQS
KwoKY29sbGVjdGlvbhgCIAIoCzIXLk15c3FseC5DcnVkLkNvbGxlY3Rpb24SKgoKZGF0YV9tb2Rl
bBgDIAEoDjIWLk15c3FseC5DcnVkLkRhdGFNb2RlbBIrCgpwcm9qZWN0aW9uGAQgAygLMhcuTXlz
cWx4LkNydWQuUHJvamVjdGlvbhIjCghjcml0ZXJpYRgFIAEoCzIRLk15c3FseC5FeHByLkV4cHIS
JgoEYXJncxgLIAMoCzIYLk15c3FseC5EYXRhdHlwZXMuU2NhbGFyEiEKBWxpbWl0GAYgASgLMhIu
TXlzcWx4LkNydWQuTGltaXQSIQoFb3JkZXIYByADKAsyEi5NeXNxbHguQ3J1ZC5PcmRlchIjCghn
cm91cGluZxgIIAMoCzIRLk15c3FseC5FeHByLkV4cHISLAoRZ3JvdXBpbmdfY3JpdGVyaWEYCSAB
KAsyES5NeXNxbHguRXhwci5FeHByIosCCgZJbnNlcnQSKwoKY29sbGVjdGlvbhgBIAIoCzIXLk15
c3FseC5DcnVkLkNvbGxlY3Rpb24SKgoKZGF0YV9tb2RlbBgCIAEoDjIWLk15c3FseC5DcnVkLkRh
dGFNb2RlbBInCgpwcm9qZWN0aW9uGAMgAygLMhMuTXlzcWx4LkNydWQuQ29sdW1uEikKA3JvdxgE
IAMoCzIcLk15c3FseC5DcnVkLkluc2VydC5UeXBlZFJvdxImCgRhcmdzGAUgAygLMhguTXlzcWx4
LkRhdGF0eXBlcy5TY2FsYXIaLAoIVHlwZWRSb3cSIAoFZmllbGQYASADKAsyES5NeXNxbHguRXhw
ci5FeHByIqUCCgZVcGRhdGUSKwoKY29sbGVjdGlvbhgCIAIoCzIXLk15c3FseC5DcnVkLkNvbGxl
Y3Rpb24SKgoKZGF0YV9tb2RlbBgDIAEoDjIWLk15c3FseC5DcnVkLkRhdGFNb2RlbBIjCghjcml0
ZXJpYRgEIAEoCzIRLk15c3FseC5FeHByLkV4cHISJgoEYXJncxgIIAMoCzIYLk15c3FseC5EYXRh
dHlwZXMuU2NhbGFyEiEKBWxpbWl0GAUgASgLMhIuTXlzcWx4LkNydWQuTGltaXQSIQoFb3JkZXIY
BiADKAsyEi5NeXNxbHguQ3J1ZC5PcmRlchIvCglvcGVyYXRpb24YByADKAsyHC5NeXNxbHguQ3J1
ZC5VcGRhdGVPcGVyYXRpb24i9AEKBkRlbGV0ZRIrCgpjb2xsZWN0aW9uGAEgAigLMhcuTXlzcWx4
LkNydWQuQ29sbGVjdGlvbhIqCgpkYXRhX21vZGVsGAIgASgOMhYuTXlzcWx4LkNydWQuRGF0YU1v
ZGVsEiMKCGNyaXRlcmlhGAMgASgLMhEuTXlzcWx4LkV4cHIuRXhwchImCgRhcmdzGAYgAygLMhgu
TXlzcWx4LkRhdGF0eXBlcy5TY2FsYXISIQoFbGltaXQYBCABKAsyEi5NeXNxbHguQ3J1ZC5MaW1p
dBIhCgVvcmRlchgFIAMoCzISLk15c3FseC5DcnVkLk9yZGVyKiQKCURhdGFNb2RlbBIMCghET0NV
TUVOVBABEgkKBVRBQkxFEAJCHgocY29tLm15c3FsLmNqLm15c3FseC5wcm90b2J1ZkrNOgoHEgUA
AK4BAgohCgECEgMFCBMaFyBCYXNpYyBDUlVEIG9wZXJhdGlvbnMKCggKAQgSAwYANQoLCgQI5wcA
EgMGADUKDAoFCOcHAAISAwYHEwoNCgYI5wcAAgASAwYHEwoOCgcI5wcAAgABEgMGBxMKDAoFCOcH
AAcSAwYWNAoJCgIDABIDCAcaCgkKAgMBEgMJBx8KHwoCBAASBAwAEAEaEyBjb2x1bW4gZGVmaW5p
dGlvbgoKCgoDBAABEgMMCA4KCwoEBAACABIDDQIbCgwKBQQAAgAEEgMNAgoKDAoFBAACAAUSAw0L
EQoMCgUEAAIAARIDDRIWCgwKBQQAAgADEgMNGRoKCwoEBAACARIDDgIcCgwKBQQAAgEEEgMOAgoK
DAoFBAACAQUSAw4LEQoMCgUEAAIBARIDDhIXCgwKBQQAAgEDEgMOGhsKCwoEBAACAhIDDwI6CgwK
BQQAAgIEEgMPAgoKDAoFBAACAgYSAw8LJwoMCgUEAAICARIDDyg1CgwKBQQAAgIDEgMPODkKowIK
AgQBEgQYABsBGpYCIGEgcHJvamVjdGlvbgoKIDpwYXJhbSBzb3VyY2U6IHRoZSBleHByZXNzaW9u
IGlkZW50aWZ5aW5nIGFuIGVsZW1lbnQgZnJvbSB0aGUgc291cmNlIGRhdGEKICAgICAgICAgICAg
ICAgIHdoaWNoIGNhbiBpbmNsdWRlIGEgY29sdW1uIGlkZW50aWZpZXIgb3IgYW55IGV4cHJlc3Np
b24KIDpwYXJhbSBhbGlhczogb3B0aW9uYWwgYWxpYXMuIFJlcXVpcmVkIGZvciBET0NVTUVOVHMg
KGNsaWVudHMgbWF5IHVzZSAKICAgICAgICAgICAgICB0aGUgc291cmNlIHN0cmluZyBhcyBkZWZh
dWx0KQoKCgoDBAEBEgMYCBIKCwoEBAECABIDGQQpCgwKBQQBAgAEEgMZBAwKDAoFBAECAAYSAxkN
HQoMCgUEAQIAARIDGR4kCgwKBQQBAgADEgMZJygKCwoEBAECARIDGgQeCgwKBQQBAgEEEgMaBAwK
DAoFBAECAQUSAxoNEwoMCgUEAQIBARIDGhQZCgwKBQQBAgEDEgMaHB0KNgoCBQASBB4AIQEaKiBE
YXRhTW9kZWwgdG8gdXNlIGZvciBmaWx0ZXJzLCBuYW1lcywgLi4uCgoKCgMFAAESAx4FDgoLCgQF
AAIAEgMfAg8KDAoFBQACAAESAx8CCgoMCgUFAAIAAhIDHw0OCgsKBAUAAgESAyACDAoMCgUFAAIB
ARIDIAIHCgwKBQUAAgECEgMgCgsKGAoCBAISBCQAJwEaDCBjb2xsZWN0aW9uCgoKCgMEAgESAyQI
EgoLCgQEAgIAEgMlAhsKDAoFBAICAAQSAyUCCgoMCgUEAgIABRIDJQsRCgwKBQQCAgABEgMlEhYK
DAoFBAICAAMSAyUZGgoLCgQEAgIBEgMmAh0KDAoFBAICAQQSAyYCCgoMCgUEAgIBBRIDJgsRCgwK
BQQCAgEBEgMmEhgKDAoFBAICAQMSAyYbHAqBAQoCBAMSBC0AMAEadSBsaW1pdAoKIDpwYXJhbSBy
b3dfY291bnQ6IG1heGltdW0gcm93cyB0byBmaWx0ZXIKIDpwYXJhbSBvZmZzZXQ6IG1heGltdW0g
cm93cyB0byBza2lwIGJlZm9yZSBhcHBseWluZyB0aGUgcm93X2NvdW50CgoKCgMEAwESAy0IDQoL
CgQEAwIAEgMuAiAKDAoFBAMCAAQSAy4CCgoMCgUEAwIABRIDLgsRCgwKBQQDAgABEgMuEhsKDAoF
BAMCAAMSAy4eHwoLCgQEAwIBEgMvAh0KDAoFBAMCAQQSAy8CCgoMCgUEAwIBBRIDLwsRCgwKBQQD
AgEBEgMvEhgKDAoFBAMCAQMSAy8bHAoYCgIEBBIEMwA7ARoMIHNvcnQgb3JkZXIKCgoKAwQEARID
MwgNCgwKBAQEBAASBDQCNwMKDAoFBAQEAAESAzQHEAoNCgYEBAQAAgASAzUEDAoOCgcEBAQAAgAB
EgM1BAcKDgoHBAQEAAIAAhIDNQoLCg0KBgQEBAACARIDNgQNCg4KBwQEBAACAQESAzYECAoOCgcE
BAQAAgECEgM2CwwKCwoEBAQCABIDOQIlCgwKBQQEAgAEEgM5AgoKDAoFBAQCAAYSAzkLGwoMCgUE
BAIAARIDORwgCgwKBQQEAgADEgM5IyQKCwoEBAQCARIDOgIzCgwKBQQEAgEEEgM6AgoKDAoFBAQC
AQYSAzoLFAoMCgUEBAIBARIDOhUeCgwKBQQEAgEDEgM6ISIKDAoFBAQCAQgSAzojMgoMCgUEBAIB
BxIDOi0wCswDCgIEBRIERQBSARq/AyB1cGRhdGUgb3BlcmF0aW9ucwoKIDpwYXJhbSBzb3VyY2U6
IHNwZWNpZmljYXRpb24gb2YgdGhlIHZhbHVlIHRvIGJlIHVwZGF0ZWQKICAgICAgaWYgZGF0YV9t
b2RlbCBpcyBUQUJMRSwgYSBjb2x1bW4gbmFtZSBtYXkgYmUgc3BlY2lmaWVkIGFuZCBhbHNvIGEg
ZG9jdW1lbnQgcGF0aCwgaWYgdGhlIGNvbHVtbiBoYXMgdHlwZSBKU09OCiAgICAgIGlmIGRhdGFf
bW9kZWwgaXMgRE9DVU1FTlQsIG9ubHkgZG9jdW1lbnQgcGF0aHMgYXJlIGFsbG93ZWQKICAgICAg
aW4gYm90aCBjYXNlcywgc2NoZW1hIGFuZCB0YWJsZSBtdXN0IGJlIG5vdCBzZXQKIDpwYXJhbSBv
cGVyYXRpb246IHRoZSB0eXBlIG9mIG9wZXJhdGlvbiB0byBiZSBwZXJmb3JtZWQKIDpwYXJhbSB2
YWx1ZTogYW4gZXhwcmVzc2lvbiB0byBiZSBjb21wdXRlZCBhcyB0aGUgbmV3IHZhbHVlIGZvciB0
aGUgb3BlcmF0aW9uCgoKCgMEBQESA0UIFwoMCgQEBQQAEgRGAk4DCgwKBQQFBAABEgNGBxEKJwoG
BAUEAAIAEgNHBAwiGCBvbmx5IGFsbG93ZWQgZm9yIFRBQkxFCgoOCgcEBQQAAgABEgNHBAcKDgoH
BAUEAAIAAhIDRwoLCk4KBgQFBAACARIDSAQUIj8gbm8gdmFsdWUgKHJlbW92ZXMgdGhlIGlkZW50
aWZpZWQgcGF0aCBmcm9tIGEgb2JqZWN0IG9yIGFycmF5KQoKDgoHBAUEAAIBARIDSAQPCg4KBwQF
BAACAQISA0gSEwo6CgYEBQQAAgISA0kEESIrIHNldHMgdGhlIG5ldyB2YWx1ZSBvbiB0aGUgaWRl
bnRpZmllZCBwYXRoCgoOCgcEBQQAAgIBEgNJBAwKDgoHBAUEAAICAhIDSQ8QCjQKBgQFBAACAxID
SgQVIiUgcmVwbGFjZXMgYSB2YWx1ZSBpZiB0aGUgcGF0aCBleGlzdHMKCg4KBwQFBAACAwESA0oE
EAoOCgcEBQQAAgMCEgNKExQKMwoGBAUEAAIEEgNLBBMiJCBzb3VyY2UgYW5kIHZhbHVlIG11c3Qg
YmUgZG9jdW1lbnRzCgoOCgcEBQQAAgQBEgNLBA4KDgoHBAUEAAIEAhIDSxESClkKBgQFBAACBRID
TAQVIkogaW5zZXJ0IHRoZSB2YWx1ZSBpbiB0aGUgYXJyYXkgYXQgdGhlIGluZGV4IGlkZW50aWZp
ZWQgaW4gdGhlIHNvdXJjZSBwYXRoCgoOCgcEBQQAAgUBEgNMBBAKDgoHBAUEAAIFAhIDTBMUCkUK
BgQFBAACBhIDTQQVIjYgYXBwZW5kIHRoZSB2YWx1ZSBvbiB0aGUgYXJyYXkgYXQgdGhlIGlkZW50
aWZpZWQgcGF0aAoKDgoHBAUEAAIGARIDTQQQCg4KBwQFBAACBgISA00TFAoLCgQEBQIAEgNPAjMK
DAoFBAUCAAQSA08CCgoMCgUEBQIABhIDTwsnCgwKBQQFAgABEgNPKC4KDAoFBAUCAAMSA08xMgoL
CgQEBQIBEgNQAiQKDAoFBAUCAQQSA1ACCgoMCgUEBQIBBhIDUAsVCgwKBQQFAgEBEgNQFh8KDAoF
BAUCAQMSA1AiIwoLCgQEBQICEgNRAiYKDAoFBAUCAgQSA1ECCgoMCgUEBQICBhIDUQsbCgwKBQQF
AgIBEgNRHCEKDAoFBAUCAgMSA1EkJQrOBQoCBAYSBGUAcAEawQUgRmluZCBEb2N1bWVudHMvUm93
cyBpbiBhIENvbGxlY3Rpb24vVGFibGUKCiAuLiB1bWw6OgoKICAgY2xpZW50IC0+IHNlcnZlcjog
RmluZAogICAuLi4gb25lIG9yIG1vcmUgUmVzdWx0c2V0IC4uLgoKIDpwYXJhbSBjb2xsZWN0aW9u
OiBjb2xsZWN0aW9uIHRvIGluc2VydCBpbnRvCiA6cGFyYW0gZGF0YV9tb2RlbDogZGF0YW1vZGVs
IHRoYXQgdGhlIG9wZXJhdGlvbnMgcmVmZXIgdG8KIDpwYXJhbSBwcm9qZWN0aW9uOiBsaXN0IG9m
IGNvbHVtbiBwcm9qZWN0aW9ucyB0aGF0IHNoYWxsIGJlIHJldHVybmVkCiA6cGFyYW0gYXJnczog
dmFsdWVzIGZvciBwYXJhbWV0ZXJzIHVzZWQgaW4gZmlsdGVyIGV4cHJlc3Npb24KIDpwYXJhbSBj
cml0ZXJpYTogZmlsdGVyIGNyaXRlcmlhCiA6cGFyYW0gbGltaXQ6IG51bWJlcnMgb2Ygcm93cyB0
aGF0IHNoYWxsIGJlIHNraXBwZWQgYW5kIHJldHVybmVkCiA6cGFyYW0gb3JkZXI6IHNvcnQtb3Jk
ZXIgaW4gd2hpY2ggdGhlIHJvd3MvZG9jdW1lbnQgc2hhbGwgYmUgcmV0dXJuZWQgaW4KIDpwYXJh
bSBncm91cGluZzogY29sdW1uIGV4cHJlc3Npb24gbGlzdCBmb3IgYWdncmVnYXRpb24gKEdST1VQ
IEJZKQogOnBhcmFtIGdyb3VwaW5nX2NyaXRlcmlhOiBmaWx0ZXIgY3JpdGVyaWEgZm9yIGFnZ3Jl
Z2F0ZWQgZ3JvdXBzCiA6UmV0dXJuczogOnByb3RvYnVmOm1zZzpgTXlzcWx4LlJlc3VsdHNldDo6
YAoKCgoDBAYBEgNlCAwKCwoEBAYCABIDZgIlCgwKBQQGAgAEEgNmAgoKDAoFBAYCAAYSA2YLFQoM
CgUEBgIAARIDZhYgCgwKBQQGAgADEgNmIyQKCwoEBAYCARIDaAIkCgwKBQQGAgEEEgNoAgoKDAoF
BAYCAQYSA2gLFAoMCgUEBgIBARIDaBUfCgwKBQQGAgEDEgNoIiMKCwoEBAYCAhIDaQIlCgwKBQQG
AgIEEgNpAgoKDAoFBAYCAgYSA2kLFQoMCgUEBgICARIDaRYgCgwKBQQGAgIDEgNpIyQKCwoEBAYC
AxIDagIpCgwKBQQGAgMEEgNqAgoKDAoFBAYCAwYSA2oLGwoMCgUEBgIDARIDahwkCgwKBQQGAgMD
EgNqJygKCwoEBAYCBBIDawItCgwKBQQGAgQEEgNrAgoKDAoFBAYCBAYSA2sLIgoMCgUEBgIEARID
ayMnCgwKBQQGAgQDEgNrKiwKCwoEBAYCBRIDbAIbCgwKBQQGAgUEEgNsAgoKDAoFBAYCBQYSA2wL
EAoMCgUEBgIFARIDbBEWCgwKBQQGAgUDEgNsGRoKCwoEBAYCBhIDbQIbCgwKBQQGAgYEEgNtAgoK
DAoFBAYCBgYSA20LEAoMCgUEBgIGARIDbREWCgwKBQQGAgYDEgNtGRoKCwoEBAYCBxIDbgIpCgwK
BQQGAgcEEgNuAgoKDAoFBAYCBwYSA24LGwoMCgUEBgIHARIDbhwkCgwKBQQGAgcDEgNuJygKCwoE
BAYCCBIDbwIyCgwKBQQGAggEEgNvAgoKDAoFBAYCCAYSA28LGwoMCgUEBgIIARIDbxwtCgwKBQQG
AggDEgNvMDEK9wMKAgQHEgV6AIUBARrpAyBJbnNlcnQgZG9jdW1lbnRzL3Jvd3MgaW50byBhIGNv
bGxlY3Rpb24vdGFibGUKCiA6cGFyYW0gY29sbGVjdGlvbjogY29sbGVjdGlvbiB0byBpbnNlcnQg
aW50bwogOnBhcmFtIGRhdGFfbW9kZWw6IGRhdGFtb2RlbCB0aGF0IHRoZSBvcGVyYXRpb25zIHJl
ZmVyIHRvCiA6cGFyYW0gcHJvamVjdGlvbjogbmFtZSBvZiB0aGUgY29sdW1ucyB0byBpbnNlcnQg
ZGF0YSBpbnRvIChlbXB0eSBpZiBkYXRhX21vZGVsIGlzIERPQ1VNRU5UKQogOnBhcmFtIHJvdzog
c2V0IG9mIHJvd3MgdG8gaW5zZXJ0IGludG8gdGhlIGNvbGxlY3Rpb24vdGFibGUgKGEgc2luZ2xl
IGV4cHJlc3Npb24gd2l0aCBhIEpTT04gZG9jdW1lbnQgbGl0ZXJhbCBvciBhbiBPQkpFQ1QgZXhw
cmVzc2lvbikKIDpwYXJhbSBhcmdzOiB2YWx1ZXMgZm9yIHBhcmFtZXRlcnMgdXNlZCBpbiByb3cg
ZXhwcmVzc2lvbnMKIDpSZXR1cm5zOiA6cHJvdG9idWY6bXNnOmBNeXNxbHguUmVzdWx0c2V0Ojpg
CgoKCgMEBwESA3oIDgoLCgQEBwIAEgN7AiUKDAoFBAcCAAQSA3sCCgoMCgUEBwIABhIDewsVCgwK
BQQHAgABEgN7FiAKDAoFBAcCAAMSA3sjJAoLCgQEBwIBEgN9AiQKDAoFBAcCAQQSA30CCgoMCgUE
BwIBBhIDfQsUCgwKBQQHAgEBEgN9FR8KDAoFBAcCAQMSA30iIwoLCgQEBwICEgN+AiEKDAoFBAcC
AgQSA34CCgoMCgUEBwICBhIDfgsRCgwKBQQHAgIBEgN+EhwKDAoFBAcCAgMSA34fIAoOCgQEBwMA
EgaAAQKCAQMKDQoFBAcDAAESBIABChIKDgoGBAcDAAIAEgSBAQQoCg8KBwQHAwACAAQSBIEBBAwK
DwoHBAcDAAIABhIEgQENHQoPCgcEBwMAAgABEgSBAR4jCg8KBwQHAwACAAMSBIEBJicKDAoEBAcC
AxIEgwECHAoNCgUEBwIDBBIEgwECCgoNCgUEBwIDBhIEgwELEwoNCgUEBwIDARIEgwEUFwoNCgUE
BwIDAxIEgwEaGwoMCgQEBwIEEgSEAQIsCg0KBQQHAgQEEgSEAQIKCg0KBQQHAgQGEgSEAQsiCg0K
BQQHAgQBEgSEASMnCg0KBQQHAgQDEgSEASorCqcECgIECBIGkQEAmwEBGpgEIFVwZGF0ZSBkb2N1
bWVudHMvcm93cyBpbiBhIGNvbGxlY3Rpb24vdGFibGUKCiA6cGFyYW0gY29sbGVjdGlvbjogY29s
bGVjdGlvbiB0byBjaGFuZ2UKIDpwYXJhbSBkYXRhX21vZGVsOiBkYXRhbW9kZWwgdGhhdCB0aGUg
b3BlcmF0aW9ucyByZWZlciB0bwogOnBhcmFtIGNyaXRlcmlhOiBmaWx0ZXIgZXhwcmVzc2lvbiB0
byBtYXRjaCByb3dzIHRoYXQgdGhlIG9wZXJhdGlvbnMgd2lsbCBhcHBseSBvbgogOnBhcmFtIGFy
Z3M6IHZhbHVlcyBmb3IgcGFyYW1ldGVycyB1c2VkIGluIGZpbHRlciBleHByZXNzaW9uCiA6cGFy
YW0gbGltaXQ6IGxpbWl0cyB0aGUgbnVtYmVyIG9mIHJvd3MgdG8gbWF0Y2gKIDpwYXJhbSBvcmRl
cjogc3BlY2lmaWVzIG9yZGVyIG9mIG1hdGNoZWQgcm93cwogOnBhcmFtIG9wZXJhdGlvbjogbGlz
dCBvZiBvcGVyYXRpb25zIHRvIGJlIGFwcGxpZWQuIFZhbGlkIG9wZXJhdGlvbnMgd2lsbCBkZXBl
bmQgb24gdGhlIGRhdGFfbW9kZWwuCiA6UmV0dXJuczogOnByb3RvYnVmOm1zZzpgTXlzcWx4LlJl
c3VsdHNldDo6YAoKCwoDBAgBEgSRAQgOCgwKBAQIAgASBJIBAiUKDQoFBAgCAAQSBJIBAgoKDQoF
BAgCAAYSBJIBCxUKDQoFBAgCAAESBJIBFiAKDQoFBAgCAAMSBJIBIyQKDAoEBAgCARIElAECJAoN
CgUECAIBBBIElAECCgoNCgUECAIBBhIElAELFAoNCgUECAIBARIElAEVHwoNCgUECAIBAxIElAEi
IwoMCgQECAICEgSVAQIpCg0KBQQIAgIEEgSVAQIKCg0KBQQIAgIGEgSVAQsbCg0KBQQIAgIBEgSV
ARwkCg0KBQQIAgIDEgSVAScoCgwKBAQIAgMSBJYBAiwKDQoFBAgCAwQSBJYBAgoKDQoFBAgCAwYS
BJYBCyIKDQoFBAgCAwESBJYBIycKDQoFBAgCAwMSBJYBKisKDAoEBAgCBBIElwECGwoNCgUECAIE
BBIElwECCgoNCgUECAIEBhIElwELEAoNCgUECAIEARIElwERFgoNCgUECAIEAxIElwEZGgoMCgQE
CAIFEgSYAQIbCg0KBQQIAgUEEgSYAQIKCg0KBQQIAgUGEgSYAQsQCg0KBQQIAgUBEgSYAREWCg0K
BQQIAgUDEgSYARkaCgwKBAQIAgYSBJoBAikKDQoFBAgCBgQSBJoBAgoKDQoFBAgCBgYSBJoBCxoK
DQoFBAgCBgESBJoBGyQKDQoFBAgCBgMSBJoBJygKxAMKAgQJEgamAQCuAQEatQMgRGVsZXRlIGRv
Y3VtZW50cy9yb3dzIGZyb20gYSBDb2xsZWN0aW9uL1RhYmxlCgogOnBhcmFtIGNvbGxlY3Rpb246
IGNvbGxlY3Rpb24gdG8gY2hhbmdlCiA6cGFyYW0gZGF0YV9tb2RlbDogZGF0YW1vZGVsIHRoYXQg
dGhlIG9wZXJhdGlvbnMgcmVmZXIgdG8KIDpwYXJhbSBjcml0ZXJpYTogZmlsdGVyIGV4cHJlc3Np
b24gdG8gbWF0Y2ggcm93cyB0aGF0IHRoZSBvcGVyYXRpb25zIHdpbGwgYXBwbHkgb24KIDpwYXJh
bSBhcmdzOiB2YWx1ZXMgZm9yIHBhcmFtZXRlcnMgdXNlZCBpbiBmaWx0ZXIgZXhwcmVzc2lvbgog
OnBhcmFtIGxpbWl0OiBsaW1pdHMgdGhlIG51bWJlciBvZiByb3dzIHRvIG1hdGNoCiA6cGFyYW0g
b3JkZXI6IHNwZWNpZmllcyBvcmRlciBvZiBtYXRjaGVkIHJvd3MKIDpSZXR1cm5zOiA6cHJvdG9i
dWY6bXNnOmBNeXNxbHguUmVzdWx0c2V0OjpgCgoLCgMECQESBKYBCA4KDAoEBAkCABIEpwECJQoN
CgUECQIABBIEpwECCgoNCgUECQIABhIEpwELFQoNCgUECQIAARIEpwEWIAoNCgUECQIAAxIEpwEj
JAoMCgQECQIBEgSpAQIkCg0KBQQJAgEEEgSpAQIKCg0KBQQJAgEGEgSpAQsUCg0KBQQJAgEBEgSp
ARUfCg0KBQQJAgEDEgSpASIjCgwKBAQJAgISBKoBAikKDQoFBAkCAgQSBKoBAgoKDQoFBAkCAgYS
BKoBCxsKDQoFBAkCAgESBKoBHCQKDQoFBAkCAgMSBKoBJygKDAoEBAkCAxIEqwECLAoNCgUECQID
BBIEqwECCgoNCgUECQIDBhIEqwELIgoNCgUECQIDARIEqwEjJwoNCgUECQIDAxIEqwEqKwoMCgQE
CQIEEgSsAQIbCg0KBQQJAgQEEgSsAQIKCg0KBQQJAgQGEgSsAQsQCg0KBQQJAgQBEgSsAREWCg0K
BQQJAgQDEgSsARkaCgwKBAQJAgUSBK0BAhsKDQoFBAkCBQQSBK0BAgoKDQoFBAkCBQYSBK0BCxAK
DQoFBAkCBQESBK0BERYKDQoFBAkCBQMSBK0BGRoK4A8KE215c3FseF9leHBlY3QucHJvdG8SDU15
c3FseC5FeHBlY3QigAMKBE9wZW4SQgoCb3AYASABKA4yIC5NeXNxbHguRXhwZWN0Lk9wZW4uQ3R4
T3BlcmF0aW9uOhRFWFBFQ1RfQ1RYX0NPUFlfUFJFVhIrCgRjb25kGAIgAygLMh0uTXlzcWx4LkV4
cGVjdC5PcGVuLkNvbmRpdGlvbhrGAQoJQ29uZGl0aW9uEhUKDWNvbmRpdGlvbl9rZXkYASACKA0S
FwoPY29uZGl0aW9uX3ZhbHVlGAIgASgMEksKAm9wGAMgASgOMjAuTXlzcWx4LkV4cGVjdC5PcGVu
LkNvbmRpdGlvbi5Db25kaXRpb25PcGVyYXRpb246DUVYUEVDVF9PUF9TRVQiPAoSQ29uZGl0aW9u
T3BlcmF0aW9uEhEKDUVYUEVDVF9PUF9TRVQQABITCg9FWFBFQ1RfT1BfVU5TRVQQASI+CgxDdHhP
cGVyYXRpb24SGAoURVhQRUNUX0NUWF9DT1BZX1BSRVYQABIUChBFWFBFQ1RfQ1RYX0VNUFRZEAEi
BwoFQ2xvc2VCHgocY29tLm15c3FsLmNqLm15c3FseC5wcm90b2J1ZkqNDAoGEgQAAFkBCh0KAQIS
AwUIFRoTIEV4cGVjdCBvcGVyYXRpb25zCgoICgEIEgMGADUKCwoECOcHABIDBgA1CgwKBQjnBwAC
EgMGBxMKDQoGCOcHAAIAEgMGBxMKDgoHCOcHAAIAARIDBgcTCgwKBQjnBwAHEgMGFjQKlAIKAgQA
EgQ5AFABGocCIG9wZW4gYW4gRXhwZWN0IGJsb2NrIGFuZCBzZXQvdW5zZXQgdGhlIGNvbmRpdGlv
bnMgdGhhdCBoYXZlIHRvIGJlIGZ1bGZpbGxlZAoKIGlmIGFueSBvZiB0aGUgY29uZGl0aW9ucyBm
YWlsLCBhbGwgZW5jbG9zZWQgbWVzc2FnZXMgd2lsbCBmYWlsIHdpdGgKIGEgTXlzcWx4LkVycm9y
IG1lc3NhZ2UuCgogOnJldHVybnM6IDpwcm90b2J1Zjptc2c6YE15c3FseDo6T2tgIG9uIHN1Y2Nl
c3MsIDpwcm90b2J1Zjptc2c6YE15c3FseDo6RXJyb3JgIG9uIGVycm9yCgoKCgoDBAABEgM5CAwK
DAoEBAADABIEOgJHAwoMCgUEAAMAARIDOgoTCg4KBgQAAwAEABIEOwRDBQoOCgcEAAMABAABEgM7
CRsKSQoIBAADAAQAAgASA0AGGBo4IHNldCB0aGUgY29uZGl0aW9uCgogc2V0LCBpZiBub3Qgc2V0
CiBvdmVyd3JpdGUsIGlmIHNldAoKEAoJBAADAAQAAgABEgNABhMKEAoJBAADAAQAAgACEgNAFhcK
JgoIBAADAAQAAgESA0IGGhoVIHVuc2V0IHRoZSBjb25kaXRpb24KChAKCQQAAwAEAAIBARIDQgYV
ChAKCQQAAwAEAAIBAhIDQhgZCg0KBgQAAwACABIDRAQmCg4KBwQAAwACAAQSA0QEDAoOCgcEAAMA
AgAFEgNEDRMKDgoHBAADAAIAARIDRBQhCg4KBwQAAwACAAMSA0QkJQoNCgYEAAMAAgESA0UEJwoO
CgcEAAMAAgEEEgNFBAwKDgoHBAADAAIBBRIDRQ0SCg4KBwQAAwACAQESA0UTIgoOCgcEAAMAAgED
EgNFJSYKDQoGBAADAAICEgNGBEMKDgoHBAADAAICBBIDRgQMCg4KBwQAAwACAgYSA0YNHwoOCgcE
AAMAAgIBEgNGICIKDgoHBAADAAICAxIDRiUmCg4KBwQAAwACAggSA0YnQgoOCgcEAAMAAgIHEgNG
M0AKDAoEBAAEABIESAJNAwoMCgUEAAQAARIDSAcTCkEKBgQABAACABIDSgQdGjIgY29weSB0aGUg
b3BlcmF0aW9ucyBmcm9tIHRoZSBwYXJlbnQgRXhwZWN0LWJsb2NrCgoOCgcEAAQAAgABEgNKBBgK
DgoHBAAEAAIAAhIDShscCjUKBgQABAACARIDTAQZGiYgc3RhcnQgd2l0aCBhIGVtcHR5IHNldCBv
ZiBvcGVyYXRpb25zCgoOCgcEAAQAAgEBEgNMBBQKDgoHBAAEAAIBAhIDTBcYCgsKBAQAAgASA04C
QgoMCgUEAAIABBIDTgIKCgwKBQQAAgAGEgNOCxcKDAoFBAACAAESA04YGgoMCgUEAAIAAxIDTh0e
CgwKBQQAAgAIEgNOH0EKDAoFBAACAAcSA04rPwoLCgQEAAIBEgNPAh4KDAoFBAACAQQSA08CCgoM
CgUEAAIBBhIDTwsUCgwKBQQAAgEBEgNPFRkKDAoFBAACAQMSA08cHQriAQoCBAESBFgAWQEa1QEg
Y2xvc2UgYSBFeHBlY3QgYmxvY2sKCiBjbG9zaW5nIGEgRXhwZWN0IGJsb2NrIHJlc3RvcmVzIHRo
ZSBzdGF0ZSBvZiB0aGUgcHJldmlvdXMgRXhwZWN0IGJsb2NrCiBmb3IgdGhlIGZvbGxvd2luZyBt
ZXNzYWdlcwoKIDpyZXR1cm5zOiA6cHJvdG9idWY6bXNnOmBNeXNxbHg6Ok9rYCBvbiBzdWNjZXNz
LCA6cHJvdG9idWY6bXNnOmBNeXNxbHg6OkVycm9yYCBvbiBlcnJvcgoKCgoDBAEBEgNYCA0KiSgK
E215c3FseF9ub3RpY2UucHJvdG8SDU15c3FseC5Ob3RpY2UaFm15c3FseF9kYXRhdHlwZXMucHJv
dG8ieQoFRnJhbWUSDAoEdHlwZRgBIAIoDRIxCgVzY29wZRgCIAEoDjIaLk15c3FseC5Ob3RpY2Uu
RnJhbWUuU2NvcGU6BkdMT0JBTBIPCgdwYXlsb2FkGAMgASgMIh4KBVNjb3BlEgoKBkdMT0JBTBAB
EgkKBUxPQ0FMEAIihQEKB1dhcm5pbmcSNAoFbGV2ZWwYASABKA4yHC5NeXNxbHguTm90aWNlLldh
cm5pbmcuTGV2ZWw6B1dBUk5JTkcSDAoEY29kZRgCIAIoDRILCgNtc2cYAyACKAkiKQoFTGV2ZWwS
CAoETk9URRABEgsKB1dBUk5JTkcQAhIJCgVFUlJPUhADIlAKFlNlc3Npb25WYXJpYWJsZUNoYW5n
ZWQSDQoFcGFyYW0YASACKAkSJwoFdmFsdWUYAiABKAsyGC5NeXNxbHguRGF0YXR5cGVzLlNjYWxh
ciLVAgoTU2Vzc2lvblN0YXRlQ2hhbmdlZBI7CgVwYXJhbRgBIAIoDjIsLk15c3FseC5Ob3RpY2Uu
U2Vzc2lvblN0YXRlQ2hhbmdlZC5QYXJhbWV0ZXISJwoFdmFsdWUYAiABKAsyGC5NeXNxbHguRGF0
YXR5cGVzLlNjYWxhciLXAQoJUGFyYW1ldGVyEhIKDkNVUlJFTlRfU0NIRU1BEAESEwoPQUNDT1VO
VF9FWFBJUkVEEAISFwoTR0VORVJBVEVEX0lOU0VSVF9JRBADEhEKDVJPV1NfQUZGRUNURUQQBBIO
CgpST1dTX0ZPVU5EEAUSEAoMUk9XU19NQVRDSEVEEAYSEQoNVFJYX0NPTU1JVFRFRBAHEhIKDlRS
WF9ST0xMRURCQUNLEAkSFAoQUFJPRFVDRURfTUVTU0FHRRAKEhYKEkNMSUVOVF9JRF9BU1NJR05F
RBALQh4KHGNvbS5teXNxbC5jai5teXNxbHgucHJvdG9idWZK/SEKBhIEAAB/AQqDAQoBAhIDCggV
GnkgTm90aWNlcwoKIEEgbm90aWNlCgogKiBpcyBzZW50IGZyb20gdGhlIHNlcnZlciB0byB0aGUg
Y2xpZW50CiAqIG1heSBiZSBnbG9iYWwgb3IgcmVsYXRlIHRvIHRoZSBjdXJyZW50IG1lc3NhZ2Ug
c2VxdWVuY2UKCggKAQgSAwsANQoLCgQI5wcAEgMLADUKDAoFCOcHAAISAwsHEwoNCgYI5wcAAgAS
AwsHEwoOCgcI5wcAAgABEgMLBxMKDAoFCOcHAAcSAwsWNAoJCgIDABIDDQcfCtAECgIEABIEHQAl
ARrDBCBDb21tb24gRnJhbWUgZm9yIGFsbCBOb3RpY2VzCgogPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gPT09PT0KIC50eXBlICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlCiA9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSA9PT09PQogOnByb3RvYnVm
Om1zZzpgTXlzcWx4Lk5vdGljZTo6V2FybmluZ2AgICAgICAgICAgICAgICAgMQogOnByb3RvYnVm
Om1zZzpgTXlzcWx4Lk5vdGljZTo6U2Vzc2lvblZhcmlhYmxlQ2hhbmdlZGAgMgogOnByb3RvYnVm
Om1zZzpgTXlzcWx4Lk5vdGljZTo6U2Vzc2lvblN0YXRlQ2hhbmdlZGAgICAgMwogPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gPT09PT0KCiA6cGFy
YW0gdHlwZTogdGhlIHR5cGUgb2YgdGhlIHBheWxvYWQKIDpwYXJhbSBwYXlsb2FkOiB0aGUgcGF5
bG9hZCBvZiB0aGUgbm90aWZpY2F0aW9uCiA6cGFyYW0gc2NvcGU6IGdsb2JhbCBvciBsb2NhbCBu
b3RpZmljYXRpb24KCgoKCgMEAAESAx0IDQoMCgQEAAQAEgQeAiEDCgwKBQQABAABEgMeBwwKDQoG
BAAEAAIAEgMfBA8KDgoHBAAEAAIAARIDHwQKCg4KBwQABAACAAISAx8NDgoNCgYEAAQAAgESAyAE
DgoOCgcEAAQAAgEBEgMgBAkKDgoHBAAEAAIBAhIDIAwNCgsKBAQAAgASAyICGwoMCgUEAAIABBID
IgIKCgwKBQQAAgAFEgMiCxEKDAoFBAACAAESAyISFgoMCgUEAAIAAxIDIhkaCgsKBAQAAgESAyMC
MQoMCgUEAAIBBBIDIwIKCgwKBQQAAgEGEgMjCxAKDAoFBAACAQESAyMSFwoMCgUEAAIBAxIDIxob
CgwKBQQAAgEIEgMjHDAKDAoFBAACAQcSAyMoLgoLCgQEAAICEgMkAh0KDAoFBAACAgQSAyQCCgoM
CgUEAAICBRIDJAsQCgwKBQQAAgIBEgMkERgKDAoFBAACAgMSAyQbHArCBgoCBAESBEEASgEatQYg
U2VydmVyLXNpZGUgd2FybmluZ3MgYW5kIG5vdGVzCgogYGAuc2NvcGVgYCA9PSBgYGxvY2FsYGAK
ICAgYGAubGV2ZWxgYCwgYGAuY29kZWBgIGFuZCBgYC5tc2dgYCBtYXAgdGhlIGNvbnRlbnQgb2YK
CiAgIC4uIGNvZGUtYmxvY2s6OiBzcWwKCiAgICAgU0hPVyBXQVJOSU5HUwoKIGBgLnNjb3BlYGAg
PT0gYGBnbG9iYWxgYAogICAodW5kZWZpbmVkKSB3aWxsIGJlIHVzZWQgZm9yIGdsb2JhbCwgdW5z
dHJ1Y3R1cmVkIG1lc3NhZ2VzIGxpa2U6CgogICAqIHNlcnZlciBpcyBzaHV0dGluZyBkb3duCiAg
ICogYSBub2RlIGRpc2Nvbm5lY3RlZCBmcm9tIGdyb3VwCiAgICogc2NoZW1hIG9yIHRhYmxlIGRy
b3BwZWQKCiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gPT09PT09
PT09PT09PT09PT09PT09PT0KIDpwcm90b2J1Zjptc2c6YE15c3FseC5Ob3RpY2U6OkZyYW1lYCBm
aWVsZCB2YWx1ZQogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ID09
PT09PT09PT09PT09PT09PT09PT09CiBgYC50eXBlYGAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgMQogYGAuc2NvcGVgYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBg
bG9jYWxgYCBvciBgYGdsb2JhbGBgCiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0gPT09PT09PT09PT09PT09PT09PT09PT0KCiA6cGFyYW0gbGV2ZWw6IHdhcm5pbmcg
bGV2ZWw6IE5vdGUgb3IgV2FybmluZwogOnBhcmFtIGNvZGU6IHdhcm5pbmcgY29kZQogOnBhcmFt
IG1zZzogd2FybmluZyBtZXNzYWdlCgoKCgMEAQESA0EIDwoMCgQEAQQAEgRCAkYDCgwKBQQBBAAB
EgNCBwwKDQoGBAEEAAIAEgNDBA0KDgoHBAEEAAIAARIDQwQICg4KBwQBBAACAAISA0MLDAoNCgYE
AQQAAgESA0QEEAoOCgcEAQQAAgEBEgNEBAsKDgoHBAEEAAIBAhIDRA4PCg0KBgQBBAACAhIDRQQO
Cg4KBwQBBAACAgESA0UECQoOCgcEAQQAAgICEgNFDA0KCwoEBAECABIDRwIyCgwKBQQBAgAEEgNH
AgoKDAoFBAECAAYSA0cLEAoMCgUEAQIAARIDRxIXCgwKBQQBAgADEgNHGhsKDAoFBAECAAgSA0cc
MQoMCgUEAQIABxIDRygvCgsKBAQBAgESA0gCGwoMCgUEAQIBBBIDSAIKCgwKBQQBAgEFEgNICxEK
DAoFBAECAQESA0gSFgoMCgUEAQIBAxIDSBkaCgsKBAQBAgISA0kCGgoMCgUEAQICBBIDSQIKCgwK
BQQBAgIFEgNJCxEKDAoFBAECAgESA0kSFQoMCgUEAQICAxIDSRgZCvEECgIEAhIEXgBhARrkBCBO
b3RpZnkgY2xpZW50cyBhYm91dCBjaGFuZ2VzIHRvIHRoZSBjdXJyZW50IHNlc3Npb24gdmFyaWFi
bGVzCgogRXZlcnkgY2hhbmdlIHRvIGEgdmFyaWFibGUgdGhhdCBpcyBhY2Nlc3NhYmxlIHRocm91
Z2g6CgogLi4gY29kZS1ibG9jazo6IHNxbAoKICAgU0hPVyBTRVNTSU9OIFZBUklBQkxFUwoKID09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSA9PT09PT09PT0KIDpwcm90
b2J1Zjptc2c6YE15c3FseC5Ob3RpY2U6OkZyYW1lYCBmaWVsZCB2YWx1ZQogPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ID09PT09PT09PQogYGAudHlwZWBgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIKIGBgLnNjb3BlYGAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBgYGxvY2FsYGAKID09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PSA9PT09PT09PT0KCiA6cGFyYW0gbmFtZXNwYWNlOiBuYW1lc3BhY2UgdGhh
dCBwYXJhbSBiZWxvbmdzIHRvCiA6cGFyYW0gcGFyYW06IG5hbWUgb2YgdGhlIHZhcmlhYmxlCiA6
cGFyYW0gdmFsdWU6IHRoZSBjaGFuZ2VkIHZhbHVlIG9mIHBhcmFtCgoKCgMEAgESA14IHgoLCgQE
AgIAEgNfAhwKDAoFBAICAAQSA18CCgoMCgUEAgIABRIDXwsRCgwKBQQCAgABEgNfEhcKDAoFBAIC
AAMSA18aGwoLCgQEAgIBEgNgAi0KDAoFBAICAQQSA2ACCgoMCgUEAgIBBhIDYAsiCgwKBQQCAgEB
EgNgIygKDAoFBAICAQMSA2ArLAq9AwoCBAMSBG8AfwEasAMgTm90aWZ5IGNsaWVudHMgYWJvdXQg
Y2hhbmdlcyB0byB0aGUgaW50ZXJuYWwgc2Vzc2lvbiBzdGF0ZQoKID09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PSA9PT09PT09PT0KIDpwcm90b2J1Zjptc2c6YE15c3Fs
eC5Ob3RpY2U6OkZyYW1lYCBmaWVsZCB2YWx1ZQogPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09ID09PT09PT09PQogYGAudHlwZWBgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIDMKIGBgLnNjb3BlYGAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBgYGxvY2FsYGAKID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSA9
PT09PT09PT0KCiA6cGFyYW0gcGFyYW06IHBhcmFtZXRlciBrZXkKIDpwYXJhbSB2YWx1ZTogdXBk
YXRlZCB2YWx1ZQoKCgoDBAMBEgNvCBsKDAoEBAMEABIEcAJ8AwoMCgUEAwQAARIDcAcQCg0KBgQD
BAACABIDcQUYCg4KBwQDBAACAAESA3EFEwoOCgcEAwQAAgACEgNxFhcKDQoGBAMEAAIBEgNyBRkK
DgoHBAMEAAIBARIDcgUUCg4KBwQDBAACAQISA3IXGAoNCgYEAwQAAgISA3MFHQoOCgcEAwQAAgIB
EgNzBRgKDgoHBAMEAAICAhIDcxscCg0KBgQDBAACAxIDdAUXCg4KBwQDBAACAwESA3QFEgoOCgcE
AwQAAgMCEgN0FRYKDQoGBAMEAAIEEgN1BRQKDgoHBAMEAAIEARIDdQUPCg4KBwQDBAACBAISA3US
EwoNCgYEAwQAAgUSA3YFFgoOCgcEAwQAAgUBEgN2BREKDgoHBAMEAAIFAhIDdhQVCg0KBgQDBAAC
BhIDdwUXCg4KBwQDBAACBgESA3cFEgoOCgcEAwQAAgYCEgN3FRYKDQoGBAMEAAIHEgN4BRgKDgoH
BAMEAAIHARIDeAUTCg4KBwQDBAACBwISA3gWFwoNCgYEAwQAAggSA3kFGwoOCgcEAwQAAggBEgN5
BRUKDgoHBAMEAAIIAhIDeRgaCiQKBgQDBAACCRIDegUdIhUgLi4gbW9yZSB0byBiZSBhZGRlZAoK
DgoHBAMEAAIJARIDegUXCg4KBwQDBAACCQISA3oaHAoLCgQEAwIAEgN9Ah8KDAoFBAMCAAQSA30C
CgoMCgUEAwIABhIDfQsUCgwKBQQDAgABEgN9FRoKDAoFBAMCAAMSA30dHgoLCgQEAwIBEgN+Ai0K
DAoFBAMCAQQSA34CCgoMCgUEAwIBBhIDfgsiCgwKBQQDAgEBEgN+IygKDAoFBAMCAQMSA34rLAqK
DAoQbXlzcWx4X3NxbC5wcm90bxIKTXlzcWx4LlNxbBoWbXlzcWx4X2RhdGF0eXBlcy5wcm90byJ5
CgtTdG10RXhlY3V0ZRIWCgluYW1lc3BhY2UYAyABKAk6A3NxbBIMCgRzdG10GAEgAigMEiMKBGFy
Z3MYAiADKAsyFS5NeXNxbHguRGF0YXR5cGVzLkFueRIfChBjb21wYWN0X21ldGFkYXRhGAQgASgI
OgVmYWxzZSIPCg1TdG10RXhlY3V0ZU9rQh4KHGNvbS5teXNxbC5jai5teXNxbHgucHJvdG9idWZK
pQoKBhIEAAAlAQopCgECEgMFCBIaHyBNZXNzYWdlcyBvZiB0aGUgTXlTUUwgUGFja2FnZQoKCAoB
CBIDBgA1CgsKBAjnBwASAwYANQoMCgUI5wcAAhIDBgcTCg0KBgjnBwACABIDBgcTCg4KBwjnBwAC
AAESAwYHEwoMCgUI5wcABxIDBhY0CgkKAgMAEgMIBx8KgQYKAgQAEgQcACEBGvQFIGV4ZWN1dGUg
YSBzdGF0ZW1lbnQgaW4gdGhlIGdpdmVuIG5hbWVzcGFjZQoKIC4uIHVtbDo6CgogICBjbGllbnQg
LT4gc2VydmVyOiBTdG10RXhlY3V0ZQogICAuLi4gemVybyBvciBtb3JlIFJlc3VsdHNldHMgLi4u
CiAgIHNlcnZlciAtLT4gY2xpZW50OiBTdG10RXhlY3V0ZU9rCgogTm90aWNlczoKICAgVGhpcyBt
ZXNzYWdlIG1heSBnZW5lcmF0ZSBhIG5vdGljZSBjb250YWluaW5nIFdBUk5JTkdzIGdlbmVyYXRl
ZCBieSBpdHMgZXhlY3V0aW9uLgogICBUaGlzIG1lc3NhZ2UgbWF5IGdlbmVyYXRlIGEgbm90aWNl
IGNvbnRhaW5pbmcgSU5GTyBtZXNzYWdlcyBnZW5lcmF0ZWQgYnkgaXRzIGV4ZWN1dGlvbi4KCiA6
cGFyYW0gbmFtZXNwYWNlOiBuYW1lc3BhY2Ugb2YgdGhlIHN0YXRlbWVudCB0byBiZSBleGVjdXRl
ZAogOnBhcmFtIHN0bXQ6IHN0YXRlbWVudCB0aGF0IHNoYWxsIGJlIGV4ZWN1dGVkLgogOnBhcmFt
IGFyZ3M6IHZhbHVlcyBmb3Igd2lsZGNhcmQgcmVwbGFjZW1lbnRzCiA6cGFyYW0gY29tcGFjdF9t
ZXRhZGF0YTogc2VuZCBvbmx5IHR5cGUgaW5mb3JtYXRpb24gZm9yIDpwcm90b2J1Zjptc2c6YE15
c3FseC5SZXN1bHRzZXQ6OkNvbHVtbk1ldGFkYXRhYCwgc2tpcHBpbmcgbmFtZXMgYW5kIG90aGVy
cwogOnJldHVybnM6CiAgICAqIHplcm8gb3Igb25lIDpwcm90b2J1Zjptc2c6YE15c3FseC5SZXN1
bHRzZXQ6OmAgZm9sbG93ZWQgYnkgOnByb3RvYnVmOm1zZzpgTXlzcWx4LlNxbDo6U3RtdEV4ZWN1
dGVPa2AKCgoKAwQAARIDHAgTCgsKBAQAAgASAx0CNAoMCgUEAAIABBIDHQIKCgwKBQQAAgAFEgMd
CxEKDAoFBAACAAESAx0SGwoMCgUEAAIAAxIDHR4fCgwKBQQAAgAIEgMdIDMKDAoFBAACAAcSAx0s
MQoLCgQEAAIBEgMeAhoKDAoFBAACAQQSAx4CCgoMCgUEAAIBBRIDHgsQCgwKBQQAAgEBEgMeERUK
DAoFBAACAQMSAx4YGQoLCgQEAAICEgMfAikKDAoFBAACAgQSAx8CCgoMCgUEAAICBhIDHwsfCgwK
BQQAAgIBEgMfICQKDAoFBAACAgMSAx8nKAoLCgQEAAIDEgMgAjkKDAoFBAACAwQSAyACCgoMCgUE
AAIDBRIDIAsPCgwKBQQAAgMBEgMgECAKDAoFBAACAwMSAyAjJAoMCgUEAAIDCBIDICU4CgwKBQQA
AgMHEgMgMTYKKwoCBAESBCQAJQEaHyBzdGF0ZW1lbnQgZXhlY3V0ZWQgc3VjY2Vzc2Z1bAoKCgoD
BAEBEgMkCBUK63EKFm15c3FseF9yZXN1bHRzZXQucHJvdG8SEE15c3FseC5SZXN1bHRzZXQiGAoW
RmV0Y2hEb25lTW9yZU91dFBhcmFtcyIZChdGZXRjaERvbmVNb3JlUmVzdWx0c2V0cyILCglGZXRj
aERvbmUinwMKDkNvbHVtbk1ldGFEYXRhEjgKBHR5cGUYASACKA4yKi5NeXNxbHguUmVzdWx0c2V0
LkNvbHVtbk1ldGFEYXRhLkZpZWxkVHlwZRIMCgRuYW1lGAIgASgMEhUKDW9yaWdpbmFsX25hbWUY
AyABKAwSDQoFdGFibGUYBCABKAwSFgoOb3JpZ2luYWxfdGFibGUYBSABKAwSDgoGc2NoZW1hGAYg
ASgMEg8KB2NhdGFsb2cYByABKAwSEQoJY29sbGF0aW9uGAggASgEEhkKEWZyYWN0aW9uYWxfZGln
aXRzGAkgASgNEg4KBmxlbmd0aBgKIAEoDRINCgVmbGFncxgLIAEoDRIUCgxjb250ZW50X3R5cGUY
DCABKA0iggEKCUZpZWxkVHlwZRIICgRTSU5UEAESCAoEVUlOVBACEgoKBkRPVUJMRRAFEgkKBUZM
T0FUEAYSCQoFQllURVMQBxIICgRUSU1FEAoSDAoIREFURVRJTUUQDBIHCgNTRVQQDxIICgRFTlVN
EBASBwoDQklUEBESCwoHREVDSU1BTBASIhQKA1JvdxINCgVmaWVsZBgBIAMoDEIeChxjb20ubXlz
cWwuY2oubXlzcWx4LnByb3RvYnVmSqRtCgcSBQAA5wMBCggKAQISA2UIGAoICgEIEgNmADUKCwoE
COcHABIDZgA1CgwKBQjnBwACEgNmBxMKDQoGCOcHAAIAEgNmBxMKDgoHCOcHAAIAARIDZgcTCgwK
BQjnBwAHEgNmFjQKOwoCBAASBGkAagEaLyByZXN1bHRzZXRzIGFyZSBmaW5pc2hlZCwgT1VUIHBh
cmFtc2V0IGlzIG5leHQKCgoKAwQAARIDaQgeClIKAgQBEgRtAG4BGkYgcmVzdWx0c2V0IGFuZCBv
dXQtcGFyYW1zIGFyZSBmaW5pc2hlZCwgYnV0IG1vcmUgcmVzdWx0c2V0cyBhdmFpbGFibGUKCgoK
AwQBARIDbQgfCikKAgQCEgRxAHIBGh0gYWxsIHJlc3VsdHNldHMgYXJlIGZpbmlzaGVkCgoKCgME
AgESA3EIEQrLWwoCBAMSBrUDANwDARq8WyBtZXRhIGRhdGEgb2YgYSBDb2x1bW4KCiAuLiBub3Rl
OjogdGhlIGVuY29kaW5nIHVzZWQgZm9yIHRoZSBkaWZmZXJlbnQgYGBieXRlc2BgIGZpZWxkcyBp
biB0aGUgbWV0YSBkYXRhIGlzIGV4dGVybmFsbHkKICAgY29udHJvbGxlZC4KICAgLi4gc2VlYWxz
bzo6IGh0dHBzOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzUuMC9lbi9jaGFyc2V0LWNvbm5l
Y3Rpb24uaHRtbAoKIC4uIG5vdGU6OgogICBUaGUgc2VydmVyIG1heSBub3Qgc2V0IHRoZSBgYG9y
aWdpbmFsX3t0YWJsZXxuYW1lfWBgIGZpZWxkcyBpZiB0aGV5IGFyZSBlcXVhbCB0byB0aGUgcGxh
aW4KICAgYGB7dGFibGV8bmFtZX1gYCBmaWVsZC4KCiAgIEEgY2xpZW50IGhhcyB0byByZWNvbnN0
cnVjdCBpdCBsaWtlOjoKCiAgICAgaWYgLm9yaWdpbmFsX25hbWUgaXMgZW1wdHkgYW5kIC5uYW1l
IGlzIG5vdCBlbXB0eToKICAgICAgIC5vcmlnaW5hbF9uYW1lID0gLm5hbWUKCiAgICAgaWYgLm9y
aWdpbmFsX3RhYmxlIGlzIGVtcHR5IGFuZCAudGFibGUgaXMgbm90IGVtcHR5OgogICAgICAgLm9y
aWdpbmFsX3RhYmxlID0gLnRhYmxlCgogLi4gbm90ZTo6CiAgIGBgY29tcGFjdCBtZXRhZGF0YSBm
b3JtYXRgYCBjYW4gYmUgcmVxdWVzdGVkIGJ5IHRoZSBjbGllbnQuIEluIHRoYXQgY2FzZSBvbmx5
IGBgLnR5cGVgYCBpcyBzZXQgYW5kCiAgIGFsbCBvdGhlciBmaWVsZHMgYXJlIGVtcHR5LgoKCiA6
cGFyYW0gdHlwZToKICAgLi4gdGFibGU6OiBFeHBlY3RlZCBEYXRhdHlwZSBvZiBNeXNxbHguUmVz
dWx0c2V0LlJvdyBwZXIgU1FMIFR5cGUgZm9yIG5vbiBOVUxMIHZhbHVlcwoKICAgICA9PT09PT09
PT09PT09PT09PSA9PT09PT09PT09PT0gPT09PT09PSA9PT09PT09PT09ID09PT09PSA9PT09PT09
PQogICAgIFNRTCBUeXBlICAgICAgICAgIC50eXBlICAgICAgICAubGVuZ3RoIC5mcmFjX2RpZyAg
LmZsYWdzIC5jaGFyc2V0CiAgICAgPT09PT09PT09PT09PT09PT0gPT09PT09PT09PT09ID09PT09
PT0gPT09PT09PT09PSA9PT09PT0gPT09PT09PT0KICAgICBUSU5ZICAgICAgICAgICAgICBTSU5U
ICAgICAgICAgeAogICAgIFRJTlkgVU5TSUdORUQgICAgIFVJTlQgICAgICAgICB4ICAgICAgICAg
ICAgICAgICAgeAogICAgIFNIT1JUICAgICAgICAgICAgIFNJTlQgICAgICAgICB4CiAgICAgU0hP
UlQgVU5TSUdORUQgICAgVUlOVCAgICAgICAgIHggICAgICAgICAgICAgICAgICB4CiAgICAgSU5U
MjQgICAgICAgICAgICAgU0lOVCAgICAgICAgIHgKICAgICBJTlQyNCBVTlNJR05FRCAgICBVSU5U
ICAgICAgICAgeCAgICAgICAgICAgICAgICAgIHgKICAgICBJTlQgICAgICAgICAgICAgICBTSU5U
ICAgICAgICAgeAogICAgIElOVCBVTlNJR05FRCAgICAgIFVJTlQgICAgICAgICB4ICAgICAgICAg
ICAgICAgICAgeAogICAgIExPTkdMT05HICAgICAgICAgIFNJTlQgICAgICAgICB4CiAgICAgTE9O
R0xPTkcgVU5TSUdORUQgVUlOVCAgICAgICAgIHggICAgICAgICAgICAgICAgICB4CiAgICAgRE9V
QkxFICAgICAgICAgICAgRE9VQkxFICAgICAgIHggICAgICAgeCAgICAgICAgICB4CiAgICAgRkxP
QVQgICAgICAgICAgICAgRkxPQVQgICAgICAgIHggICAgICAgeCAgICAgICAgICB4CiAgICAgREVD
SU1BTCAgICAgICAgICAgREVDSU1BTCAgICAgIHggICAgICAgeCAgICAgICAgICB4CiAgICAgVkFS
Q0hBUixDSEFSLC4uLiAgQllURVMgICAgICAgIHggICAgICAgICAgICAgICAgICB4ICAgICAgeAog
ICAgIEdFT01FVFJZICAgICAgICAgIEJZVEVTCiAgICAgVElNRSAgICAgICAgICAgICAgVElNRSAg
ICAgICAgIHgKICAgICBEQVRFICAgICAgICAgICAgICBEQVRFVElNRSAgICAgeAogICAgIERBVEVU
SU1FICAgICAgICAgIERBVEVUSU1FICAgICB4CiAgICAgWUVBUiAgICAgICAgICAgICAgVUlOVCAg
ICAgICAgIHggICAgICAgICAgICAgICAgICB4CiAgICAgVElNRVNUQU1QICAgICAgICAgREFURVRJ
TUUgICAgIHgKICAgICBTRVQgICAgICAgICAgICAgICBTRVQgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICB4CiAgICAgRU5VTSAgICAgICAgICAgICAgRU5VTSAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgeAogICAgIE5VTEwgICAgICAgICAgICAgIEJZVEVTCiAgICAg
QklUICAgICAgICAgICAgICAgQklUICAgICAgICAgIHgKICAgICA9PT09PT09PT09PT09PT09PSA9
PT09PT09PT09PT0gPT09PT09PSA9PT09PT09PT09ID09PT09PSA9PT09PT09PQoKICAgLi4gbm90
ZTo6IHRoZSBTUUwgIk5VTEwiIHZhbHVlIGlzIHNlbnQgYXMgYW4gZW1wdHkgZmllbGQgdmFsdWUg
aW4gOnByb3RvYnVmOm1zZzpgTXlzcWx4LlJlc3VsdHNldDo6Um93YAogICAuLiBzZWVhbHNvOjog
cHJvdG9idWYgZW5jb2Rpbmcgb2YgcHJpbWl0aXZlIGRhdGF0eXBlcyBhcmUgZGVjcmliZWQgaW4g
aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vcHJvdG9jb2wtYnVmZmVycy9kb2NzL2VuY29k
aW5nCgogICBTSU5UCgogICAgIGBgLmxlbmd0aGBgCiAgICAgICBtYXhpbXVtIG51bWJlciBvZiBk
aXNwbGF5YWJsZSBkZWNpbWFsIGRpZ2l0cyAoaW5jbHVkaW5nIG1pbnVzIHNpZ24pIG9mIHRoZSB0
eXBlCgogICAgICAgLi4gbm90ZTo6CiAgICAgICAgIHZhbGlkIHJhbmdlIGlzIDAtMjU1LCBidXQg
dXN1YWxseSB5b3UnbGwgc2VlIDEtMjAKCiAgICAgICA9PT09PT09PT09PT09PT0gPT0KICAgICAg
IFNRTCBUeXBlICAgICAgICBtYXggZGlnaXRzIHBlciB0eXBlCiAgICAgICA9PT09PT09PT09PT09
PT0gPT0KICAgICAgIFRJTlkgU0lHTkVEICAgICAgNAogICAgICAgU0hPUlQgU0lHTkVEICAgICA2
CiAgICAgICBJTlQyNCBTSUdORUQgICAgIDgKICAgICAgIElOVCBTSUdORUQgICAgICAxMQogICAg
ICAgTE9OR0xPTkcgU0lHTkVEIDIwCiAgICAgICA9PT09PT09PT09PT09PT0gPT0KCiAgICAgICAu
LiBzZWVhbHNvOjogZGVmaW5pdGlvbiBvZiBgYE1gYCBpbiBodHRwczovL2Rldi5teXNxbC5jb20v
ZG9jL3JlZm1hbi81LjUvZW4vbnVtZXJpYy10eXBlLW92ZXJ2aWV3Lmh0bWwKCiAgICAgYGB2YWx1
ZWBgCiAgICAgICB2YXJpYWJsZSBsZW5ndGggZW5jb2RlZCBzaWduZWQgNjQgaW50ZWdlcgoKICAg
VUlOVAoKICAgICBgYC5mbGFncyAmIDFgYCAoemVyb2ZpbGwpCiAgICAgICB0aGUgY2xpZW50IGhh
cyB0byBsZWZ0IHBhZCB3aXRoIDAncyB1cCB0byAubGVuZ3RoCgogICAgIGBgLmxlbmd0aGBgCiAg
ICAgICBtYXhpbXVtIG51bWJlciBvZiBkaXNwbGF5YWJsZSBkZWNpbWFsIGRpZ2l0cyBvZiB0aGUg
dHlwZQoKICAgICAgIC4uIG5vdGU6OgogICAgICAgICB2YWxpZCByYW5nZSBpcyAwLTI1NSwgYnV0
IHVzdWFsbHkgeW91J2xsIHNlZSAxLTIwCgogICAgICAgPT09PT09PT09PT09PT09PT0gPT0KICAg
ICAgIFNRTCBUeXBlICAgICAgICAgIG1heCBkaWdpdHMgcGVyIHR5cGUKICAgICAgID09PT09PT09
PT09PT09PT09ID09CiAgICAgICBUSU5ZIFVOU0lHTkVEICAgICAgMwogICAgICAgU0hPUlQgVU5T
SUdORUQgICAgIDUKICAgICAgIElOVDI0IFVOU0lHTkVEICAgICA4CiAgICAgICBJTlQgVU5TSUdO
RUQgICAgICAxMAogICAgICAgTE9OR0xPTkcgVU5TSUdORUQgMjAKICAgICAgID09PT09PT09PT09
PT09PT09ID09CgogICAgICAgLi4gc2VlYWxzbzo6IGRlZmluaXRpb24gb2YgYGBNYGAgaW4gaHR0
cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS41L2VuL251bWVyaWMtdHlwZS1vdmVydmll
dy5odG1sCgogICAgIGBgdmFsdWVgYAogICAgICAgdmFyaWFibGUgbGVuZ3RoIGVuY29kZWQgdW5z
aWduZWQgNjQgaW50ZWdlcgoKICAgQklUCgogICAgIGBgLmxlbmd0aGBgCiAgICAgICBtYXhpbXVt
IG51bWJlciBvZiBkaXNwbGF5YWJsZSBiaW5hcnkgZGlnaXRzCgogICAgICAgLi4gbm90ZTo6IHZh
bGlkIHJhbmdlIGZvciBNIG9mIHRoZSBgYEJJVGBgIHR5cGUgaXMgMSAtIDY0CiAgICAgICAuLiBz
ZWVhbHNvOjogaHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS41L2VuL251bWVyaWMt
dHlwZS1vdmVydmlldy5odG1sCgogICAgIGBgdmFsdWVgYAogICAgICAgdmFyaWFibGUgbGVuZ3Ro
IGVuY29kZWQgdW5zaWduZWQgNjQgaW50ZWdlcgoKICAgRE9VQkxFCgogICAgIGBgLmxlbmd0aGBg
CiAgICAgICBtYXhpbXVtIG51bWJlciBvZiBkaXNwbGF5YWJsZSBkZWNpbWFsIGRpZ2l0cyAoaW5j
bHVkaW5nIHRoZSBkZWNpbWFsIHBvaW50IGFuZCBgYC5mcmFjdGlvbmFsX2RpZ2l0c2BgKQoKICAg
ICBgYC5mcmFjdGlvbmFsX2RpZ2l0c2BgCiAgICAgICBtYXhpbXVtIG51bWJlciBvZiBkaXNwbGF5
YWJsZSBkZWNpbWFsIGRpZ2l0cyBmb2xsb3dpbmcgdGhlIGRlY2ltYWwgcG9pbnQKCiAgICAgYGB2
YWx1ZWBgCiAgICAgICBlbmNvZGVkIGFzIFByb3RvYnVmJ3MgJ2RvdWJsZScKCiAgIEZMT0FUCgog
ICAgIGBgLmxlbmd0aGBgCiAgICAgICBtYXhpbXVtIG51bWJlciBvZiBkaXNwbGF5YWJsZSBkZWNp
bWFsIGRpZ2l0cyAoaW5jbHVkaW5nIHRoZSBkZWNpbWFsIHBvaW50IGFuZCBgYC5mcmFjdGlvbmFs
X2RpZ2l0c2BgKQoKICAgICBgYC5mcmFjdGlvbmFsX2RpZ2l0c2BgCiAgICAgICBtYXhpbXVtIG51
bWJlciBvZiBkaXNwbGF5YWJsZSBkZWNpbWFsIGRpZ2l0cyBmb2xsb3dpbmcgdGhlIGRlY2ltYWwg
cG9pbnQKCiAgICAgYGB2YWx1ZWBgCiAgICAgICBlbmNvZGVkIGFzIFByb3RvYnVmJ3MgJ2Zsb2F0
JwoKICAgQllURVMsIEVOVU0KICAgICBCWVRFUyBpcyB1c2VkIGZvciBhbGwgb3BhcXVlIGJ5dGUg
c3RyaW5ncyB0aGF0IG1heSBoYXZlIGEgY2hhcnNldAoKICAgICAgICogVElOWUJMT0IsIEJMT0Is
IE1FRElVTUJMT0IsIExPTkdCTE9CCiAgICAgICAqIFRJTllURVhULCBURVhULCBNRURJVU1URVhU
LCBMT05HVEVYVAogICAgICAgKiBWQVJDSEFSLCBWQVJCSU5BUlkKICAgICAgICogQ0hBUiwgQklO
QVJZCiAgICAgICAqIEVOVU0KCiAgICAgYGAubGVuZ3RoYGAKICAgICAgIHRoZSBtYXhpbXVtIGxl
bmd0aCBvZiBjaGFyYWN0ZXJzIG9mIHRoZSB1bmRlcmx5aW5nIHR5cGUKCiAgICAgYGAuZmxhZ3Mg
JiAxYGAgKHJpZ2h0cGFkKQogICAgICAgaWYgdGhlIGxlbmd0aCBvZiB0aGUgZmllbGQgaXMgbGVz
cyB0aGFuIGBgLmxlbmd0aGBgLCB0aGUgcmVjZWl2ZXIgaXMKICAgICAgIHN1cHBvc2VkIHRvIGFk
ZCBwYWRkaW5nIGNoYXJhY3RlcnMgdG8gdGhlIHJpZ2h0IGVuZCBvZiB0aGUgc3RyaW5nLgogICAg
ICAgSWYgdGhlIGBgLmNoYXJzZXRgYCBpcyAiYmluYXJ5IiwgdGhlIHBhZGRpbmcgY2hhcmFjdGVy
IGlzIGBgMHgwMGBgLAogICAgICAgb3RoZXJ3aXNlIGl0IGlzIGEgc3BhY2UgY2hhcmFjdGVyIGFz
IGRlZmluZWQgYnkgdGhhdCBjaGFyYWN0ZXIgc2V0LgoKICAgICAgID09PT09PT09PT09PT0gPT09
PT09PSA9PT09PT09PSA9PT09PT09CiAgICAgICBTUUwgVHlwZSAgICAgIC5sZW5ndGggLmNoYXJz
ZXQgLmZsYWdzCiAgICAgICA9PT09PT09PT09PT09ID09PT09PT0gPT09PT09PT0gPT09PT09PQog
ICAgICAgVElOWUJMT0IgICAgICAyNTYgICAgIGJpbmFyeQogICAgICAgQkxPQiAgICAgICAgICA2
NTUzNSAgIGJpbmFyeQogICAgICAgVkFSQ0hBUigzMikgICAzMiAgICAgIHV0ZjgKICAgICAgIFZB
UkJJTkFSWSgzMikgMzIgICAgICB1dGY4X2JpbgogICAgICAgQklOQVJZKDMyKSAgICAzMiAgICAg
IGJpbmFyeSAgIHJpZ2h0cGFkCiAgICAgICBDSEFSKDMyKSAgICAgIDMyICAgICAgdXRmOCAgICAg
cmlnaHRwYWQKICAgICAgID09PT09PT09PT09PT0gPT09PT09PSA9PT09PT09PSA9PT09PT09Cgog
ICAgIGBgdmFsdWVgYAogICAgICAgc2VxdWVuY2Ugb2YgYnl0ZXMgd2l0aCBhZGRlZCBvbmUgZXh0
cmEgJ1wwJyBieXRlIGF0IHRoZSBlbmQuIFRvIG9idGFpbiB0aGUKICAgICAgIG9yaWdpbmFsIHN0
cmluZywgdGhlIGV4dHJhICdcMCcgc2hvdWxkIGJlIHJlbW92ZWQuCiAgICAgICAuLiBub3RlOjog
dGhlIGxlbmd0aCBvZiB0aGUgc3RyaW5nIGNhbiBiZSBhY3F1aXJlZCB3aXRoIHByb3RvYnVmJ3Mg
ZmllbGQgbGVuZ3RoKCkgbWV0aG9kCiAgICAgICAgIGxlbmd0aCBvZiBzZXF1ZW5jZS1vZi1ieXRl
cyA9IGxlbmd0aC1vZi1maWVsZCAtIDEKICAgICAgIC4uIG5vdGU6OiB0aGUgZXh0cmEgYnl0ZSBh
bGxvd3MgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiBhIE5VTEwgYW5kIGVtcHR5IGJ5dGUgc2VxdWVu
Y2UKCiAgIFRJTUUKICAgICBBIHRpbWUgdmFsdWUuCgogICAgIGBgdmFsdWVgYAogICAgICAgdGhl
IGZvbGxvd2luZyBieXRlcyBzZXF1ZW5jZToKCiAgICAgICAgIGBgfCBuZWdhdGUgWyB8IGhvdXIg
fCBbIHwgbWludXRlcyB8IFsgfCBzZWNvbmRzIHwgWyB8IHVzZWNvbmRzIHwgXV1dXWBgCgogICAg
ICAgKiBuZWdhdGUgLSBvbmUgYnl0ZSwgc2hvdWxkIGJlIG9uZSBvZjogMHgwMCBmb3IgIisiLCAw
eDAxIGZvciAiLSIKICAgICAgICogaG91ciAtIG9wdGlvbmFsIHZhcmlhYmxlIGxlbmd0aCBlbmNv
ZGVkIHVuc2lnbmVkNjQgdmFsdWUgZm9yIHRoZSBob3VyCiAgICAgICAqIG1pbnV0ZXMgLSBvcHRp
b25hbCB2YXJpYWJsZSBsZW5ndGggZW5jb2RlZCB1bnNpZ25lZDY0IHZhbHVlIGZvciB0aGUgbWlu
dXRlcwogICAgICAgKiBzZWNvbmRzIC0gb3B0aW9uYWwgdmFyaWFibGUgbGVuZ3RoIGVuY29kZWQg
dW5zaWduZWQ2NCB2YWx1ZSBmb3IgdGhlIHNlY29uZHMKICAgICAgICogdXNlY29uZHMgLSBvcHRp
b25hbCB2YXJpYWJsZSBsZW5ndGggZW5jb2RlZCB1bnNpZ25lZDY0IHZhbHVlIGZvciB0aGUgbWlj
cm9zZWNvbmRzCgogICAgICAgLi4gc2VlYWxzbzo6IHByb3RvYnVmIGVuY29kaW5nIGluIGh0dHBz
Oi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3Byb3RvY29sLWJ1ZmZlcnMvZG9jcy9lbmNvZGluZwog
ICAgICAgLi4gbm90ZTo6IGhvdXIsIG1pbnV0ZXMsIHNlY29uZHMsIHVzZWNvbmRzIGFyZSBvcHRp
b25hbCBpZiBhbGwgdGhlIHZhbHVlcyB0byB0aGUgcmlnaHQgYXJlIDAKCiAgICAgICBFeGFtcGxl
OiAweDAwIC0+ICswMDowMDowMC4wMDAwMDAKCiAgIERBVEVUSU1FCiAgICAgQSBkYXRlIG9yIGRh
dGUgYW5kIHRpbWUgdmFsdWUuCgogICAgIGBgdmFsdWVgYAogICAgICAgYSBzZXF1ZW5jZSBvZiB2
YXJpYW50cywgYXJyYW5nZWQgYXMgZm9sbG93czoKCiAgICAgICAgIGBgfCB5ZWFyIHwgbW9udGgg
fCBkYXkgfCBbIHwgaG91ciB8IFsgfCBtaW51dGVzIHwgWyB8IHNlY29uZHMgfCBbIHwgdXNlY29u
ZHMgfCBdXV1dYGAKCiAgICAgICAqIHllYXIgLSB2YXJpYWJsZSBsZW5ndGggZW5jb2RlZCB1bnNp
Z25lZDY0IHZhbHVlIGZvciB0aGUgeWVhcgogICAgICAgKiBtb250aCAtIHZhcmlhYmxlIGxlbmd0
aCBlbmNvZGVkIHVuc2lnbmVkNjQgdmFsdWUgZm9yIHRoZSBtb250aAogICAgICAgKiBkYXkgLSB2
YXJpYWJsZSBsZW5ndGggZW5jb2RlZCB1bnNpZ25lZDY0IHZhbHVlIGZvciB0aGUgZGF5CiAgICAg
ICAqIGhvdXIgLSBvcHRpb25hbCB2YXJpYWJsZSBsZW5ndGggZW5jb2RlZCB1bnNpZ25lZDY0IHZh
bHVlIGZvciB0aGUgaG91cgogICAgICAgKiBtaW51dGVzIC0gb3B0aW9uYWwgdmFyaWFibGUgbGVu
Z3RoIGVuY29kZWQgdW5zaWduZWQ2NCB2YWx1ZSBmb3IgdGhlIG1pbnV0ZXMKICAgICAgICogc2Vj
b25kcyAtIG9wdGlvbmFsIHZhcmlhYmxlIGxlbmd0aCBlbmNvZGVkIHVuc2lnbmVkNjQgdmFsdWUg
Zm9yIHRoZSBzZWNvbmRzCiAgICAgICAqIHVzZWNvbmRzIC0gb3B0aW9uYWwgdmFyaWFibGUgbGVu
Z3RoIGVuY29kZWQgdW5zaWduZWQ2NCB2YWx1ZSBmb3IgdGhlIG1pY3Jvc2Vjb25kcwoKICAgICAg
IC4uIG5vdGU6OiBob3VyLCBtaW51dGVzLCBzZWNvbmRzLCB1c2Vjb25kcyBhcmUgb3B0aW9uYWwg
aWYgYWxsIHRoZSB2YWx1ZXMgdG8gdGhlIHJpZ2h0IGFyZSAwCgogICAgIGBgLmZsYWdzICYgMWBg
ICh0aW1lc3RhbXApCgogICAgICAgPT09PT09PT09PT09PSA9PT09PT09CiAgICAgICBTUUwgVHlw
ZSAgICAgIC5mbGFncwogICAgICAgPT09PT09PT09PT09PSA9PT09PT09CiAgICAgICBEQVRFVElN
RQogICAgICAgVElNRVNUQU1QICAgICAxCgogICBERUNJTUFMCiAgICAgQW4gYXJiaXRyYXJ5IGxl
bmd0aCBudW1iZXIuIFRoZSBudW1iZXIgaXMgZW5jb2RlZCBhcyBhIHNpbmdsZSBieXRlCiAgICAg
aW5kaWNhdGluZyB0aGUgcG9zaXRpb24gb2YgdGhlIGRlY2ltYWwgcG9pbnQgZm9sbG93ZWQgYnkg
dGhlIFBhY2tlZCBCQ0QKICAgICBlbmNvZGVkIG51bWJlci4gUGFja2VkIEJDRCBpcyB1c2VkIHRv
IHNpbXBsaWZ5IGNvbnZlcnNpb24gdG8gYW5kCiAgICAgZnJvbSBzdHJpbmdzIGFuZCBvdGhlciBu
YXRpdmUgYXJiaXRyYXJ5IHByZWNpc2lvbiBtYXRoIGRhdGF0eXBlcy4KICAgICAuLiBzZWVhbHNv
OjogcGFja2VkIEJDRCBpbiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CaW5hcnktY29k
ZWRfZGVjaW1hbAoKICAgICBgYC5sZW5ndGhgYAogICAgICAgbWF4aW11bSBudW1iZXIgb2YgZGlz
cGxheWFibGUgZGVjaW1hbCBkaWdpdHMgKCpleGNsdWRpbmcqIHRoZSBkZWNpbWFsIHBvaW50IGFu
ZCBzaWduLCBidXQgaW5jbHVkaW5nIGBgLmZyYWN0aW9uYWxfZGlnaXRzYGApCgogICAgICAgLi4g
bm90ZTo6IHNob3VsZCBiZSBpbiB0aGUgcmFuZ2Ugb2YgMSAtIDY1CgogICAgIGBgLmZyYWN0aW9u
YWxfZGlnaXRzYGAKICAgICAgIGlzIHRoZSBkZWNpbWFsIGRpZ2l0cyB0byBkaXNwbGF5IG91dCBv
ZiBsZW5ndGgKCiAgICAgICAuLiBub3RlOjogc2hvdWxkIGJlIGluIHRoZSByYW5nZSBvZiAwIC0g
MzAKCiAgICAgYGB2YWx1ZWBgCiAgICAgICB0aGUgZm9sbG93aW5nIGJ5dGVzIHNlcXVlbmNlOgoK
ICAgICAgICAgYGB8IHNjYWxlIHwgQkNEIHwgc2lnbiB8IFsweDBdIHxgYAoKICAgICAgICogc2Nh
bGUgLSA4Yml0IHNjYWxlIHZhbHVlIChudW1iZXIgb2YgZGVjaW1hbCBkaWdpdCBhZnRlciB0aGUg
Jy4nKQogICAgICAgKiBCQ0QgLSBCQ0QgZW5jb2RlZCBkaWdpdHMgKDQgYml0cyBmb3IgZWFjaCBk
aWdpdCkKICAgICAgICogc2lnbiAtIHNpZ24gZW5jb2RlZCBvbiA0IGJpdHMgKDB4YyA9ICIrIiwg
MHhkID0gIi0iKQogICAgICAgKiAweDAgLSBsYXN0IDRiaXRzIGlmIGxlbmd0aChkaWdpdHMpICUg
MiA9PSAwCgogICAgICAgRXhhbXBsZTogeDA0IDB4MTIgMHgzNCAweDAxIDB4ZDAgLT4gLTEyLjM0
MDEKCiAgIFNFVAogICAgIEEgbGlzdCBvZiBzdHJpbmdzIHJlcHJlc2VudGluZyBhIFNFVCBvZiB2
YWx1ZXMuCgogICAgIGBgdmFsdWVgYAogICAgICAgQSBzZXF1ZW5jZSBvZiAwIG9yIG1vcmUgb2Yg
cHJvdG9idWYncyBieXRlcyAobGVuZ3RoIHByZXBlbmRlZCBvY3RldHMpIG9yIG9uZSBvZgogICAg
ICAgdGhlIHNwZWNpYWwgc2VxdWVuY2VzIHdpdGggYSBwcmVkZWZpbmVkIG1lYW5pbmcgbGlzdGVk
IGJlbG93LgoKICAgICAgIEV4YW1wbGUgKGxlbmd0aCBvZiB0aGUgYnl0ZXMgYXJyYXkgc2hvd24g
aW4gYnJhY2tldHMpOgogICAgICAgICAqIGBgWzBdYGAgLSB0aGUgTlVMTCB2YWx1ZQogICAgICAg
ICAqIGBgWzFdIDB4MDBgYCAtIGEgc2V0IGNvbnRhaW5pbmcgYSBibGFuayBzdHJpbmcgJycKICAg
ICAgICAgKiBgYFsxXSAweDAxYGAgLSB0aGlzIHdvdWxkIGJlIGFuIGludmFsaWQgdmFsdWUsIGJ1
dCBpcyB0byBiZSB0cmVhdGVkIGFzIHRoZSBlbXB0eSBzZXQKICAgICAgICAgKiBgYFsyXSAweDAx
IDB4MDBgYCAtIGEgc2V0IHdpdGggYSBzaW5nbGUgaXRlbSwgd2hpY2ggaXMgdGhlICdcMCcgY2hh
cmFjdGVyCiAgICAgICAgICogYGBbOF0gMHgwMyBGIE8gTyAweDAzIEIgQSBSYGAgLSBhIHNldCB3
aXRoIDIgaXRlbXM6IEZPTyxCQVIKCgogOnBhcmFtIG5hbWU6IG5hbWUgb2YgdGhlIGNvbHVtbgog
OnBhcmFtIG9yaWdpbmFsX25hbWU6IG5hbWUgb2YgdGhlIGNvbHVtbiBiZWZvcmUgYW4gYWxpYXMg
d2FzIGFwcGxpZWQKIDpwYXJhbSB0YWJsZTogbmFtZSBvZiB0aGUgdGFibGUgdGhlIGNvbHVtbiBv
cmdpbmF0ZXMgZnJvbQogOnBhcmFtIG9yaWdpbmFsX3RhYmxlOiBuYW1lIG9mIHRoZSB0YWJsZSB0
aGUgY29sdW1uIG9yZ2luYXRlcyBmcm9tIGJlZm9yZSBhbiBhbGlhcyB3YXMgYXBwbGllZAogOnBh
cmFtIHNjaGVtYTogc2NoZW1hIHRoZSBjb2x1bW4gb3JpZ2luYXRlcyBmcm9tCiA6cGFyYW0gY2F0
YWxvZzoKICAgY2F0YWxvZyB0aGUgc2NoZW1hIG9yaWdpbmF0ZXMgZnJvbQoKICAgLi4gbm90ZTo6
CiAgICAgYXMgdGhlcmUgaXMgY3VycmVudCBubyBzdXBwb3J0IGZvciBjYXRhbG9ncyBpbiBNeVNR
TCwgZG9uJ3QgZXhwZWN0IHRoaXMgZmllbGQgdG8gYmUgc2V0LgogICAgIEluIHRoZSBNeVNRTCBD
L1MgcHJvdG9jb2wgdGhlIGZpZWxkIGhhZCB0aGUgdmFsdWUgYGBkZWZgYCBhbGwgdGhlIHRpbWUu
CgogOnBhcmFtIGZyYWN0aW9uYWxfZGlnaXRzOiBkaXNwbGF5ZWQgZmFjdGlvbmFsIGRlY2ltYWwg
ZGlnaXRzIGZvciBmbG9hdGluZyBwb2ludCBhbmQgZml4ZWQgcG9pbnQgbnVtYmVycwogOnBhcmFt
IGxlbmd0aDogbWF4aW11bSBjb3VudCBvZiBkaXNwbGF5YWJsZSBjaGFyYWN0ZXJzIG9mIC50eXBl
CiA6cGFyYW0gZmxhZ3M6CiAgIGBgLnR5cGVgYCBzcGVjaWZpYyBmbGFncwoKICAgPT09PT09PSA9
PT09PT0gPT09PT09PT09PT0KICAgdHlwZSAgICB2YWx1ZSAgZGVzY3JpcHRpb24KICAgPT09PT09
PSA9PT09PT0gPT09PT09PT09PT0KICAgVUlOVCAgICAweDAwMDEgemVyb2ZpbGwKICAgRE9VQkxF
ICAweDAwMDEgdW5zaWduZWQKICAgRkxPQVQgICAweDAwMDEgdW5zaWduZWQKICAgREVDSU1BTCAw
eDAwMDEgdW5zaWduZWQKICAgQllURVMgICAweDAwMDEgcmlnaHRwYWQKICAgPT09PT09PSA9PT09
PT0gPT09PT09PT09PT0KCiAgID09PT09PSA9PT09PT09PT09PT09PT09CiAgIHZhbHVlICBkZXNj
cmlwdGlvbgogICA9PT09PT0gPT09PT09PT09PT09PT09PQogICAweDAwMTAgTk9UX05VTEwKICAg
MHgwMDIwIFBSSU1BUllfS0VZCiAgIDB4MDA0MCBVTklRVUVfS0VZCiAgIDB4MDA4MCBNVUxUSVBM
RV9LRVkKICAgMHgwMTAwIEFVVE9fSU5DUkVNRU5UCiAgID09PT09PSA9PT09PT09PT09PT09PT09
CgogICBkZWZhdWx0OiAwCiA6cGFyYW0gY29udGVudF90eXBlOgogICBhIGhpbnQgYWJvdXQgdGhl
IGhpZ2hlci1sZXZlbCBlbmNvZGluZyBvZiBhIEJZVEVTIGZpZWxkCgogICA9PT09PT0gPT09PT09
ID09PT09PT09PT09CiAgIHR5cGUgICB2YWx1ZSAgZGVzY3JpcHRpb24KICAgPT09PT09ID09PT09
PSA9PT09PT09PT09PQogICBCWVRFUyAgMHgwMDAxIEdFT01FVFJZIChXS0IgZW5jb2RpbmcpCiAg
IEJZVEVTICAweDAwMDIgSlNPTiAodGV4dCBlbmNvZGluZykKICAgQllURVMgIDB4MDAwMyBYTUwg
KHRleHQgZW5jb2RpbmcpCiAgID09PT09PSA9PT09PT0gPT09PT09PT09PT0KCiAgIC4uIG5vdGU6
OgogICAgIHRoaXMgbGlzdCBpc24ndCBjb21wcmVoZW5zaXZlLiBBcyBndWlkZWxpbmU6IHRoZSBm
aWVsZCdzIHZhbHVlIGlzIGV4cGVjdGVkCiAgICAgdG8gcGFzcyBhIHZhbGlkYXRvciBjaGVjayBv
biBjbGllbnQgYW5kIHNlcnZlciBpZiB0aGlzIGZpZWxkIGlzIHNldC4KICAgICBJZiB0aGUgc2Vy
dmVyIGFkZHMgbW9yZSBpbnRlcm5hbCBkYXRhdHlwZXMgdGhhdCByZWx5IG9uIEJMT0Igc3RvcmFn
ZQogICAgIGxpa2UgaW1hZ2UgbWFuaXB1bGF0aW9uLCBzZWVraW5nIGludG8gY29tcGxleCB0eXBl
cyBpbiBCTE9CcywgLi4uIG1vcmUKICAgICB0eXBlcyB3aWxsIGJlIGFkZGVkLgoKCgsKAwQDARIE
tQMIFgoOCgQEAwQAEga2AwLGAwMKDQoFBAMEAAESBLYDBxAKDgoGBAMEAAIAEgS3AwQRCg8KBwQD
BAACAAESBLcDBAgKDwoHBAMEAAIAAhIEtwMPEAoOCgYEAwQAAgESBLgDBBEKDwoHBAMEAAIBARIE
uAMECAoPCgcEAwQAAgECEgS4Aw8QCg4KBgQDBAACAhIEugMEEQoPCgcEAwQAAgIBEgS6AwQKCg8K
BwQDBAACAgISBLoDDxAKDgoGBAMEAAIDEgS7AwQRCg8KBwQDBAACAwESBLsDBAkKDwoHBAMEAAID
AhIEuwMPEAoOCgYEAwQAAgQSBL0DBBEKDwoHBAMEAAIEARIEvQMECQoPCgcEAwQAAgQCEgS9Aw8Q
Cg4KBgQDBAACBRIEvwMEEgoPCgcEAwQAAgUBEgS/AwQICg8KBwQDBAACBQISBL8DDxEKDgoGBAME
AAIGEgTAAwQSCg8KBwQDBAACBgESBMADBAwKDwoHBAMEAAIGAhIEwAMPEQoOCgYEAwQAAgcSBMED
BBIKDwoHBAMEAAIHARIEwQMEBwoPCgcEAwQAAgcCEgTBAw8RCg4KBgQDBAACCBIEwgMEEgoPCgcE
AwQAAggBEgTCAwQICg8KBwQDBAACCAISBMIDDxEKDgoGBAMEAAIJEgTDAwQSCg8KBwQDBAACCQES
BMMDBAcKDwoHBAMEAAIJAhIEwwMPEQoOCgYEAwQAAgoSBMUDBBIKDwoHBAMEAAIKARIExQMECwoP
CgcEAwQAAgoCEgTFAw8RCi4KBAQDAgASBMkDAh4aICBkYXRhdHlwZSBvZiB0aGUgZmllbGQgaW4g
YSByb3cKCg0KBQQDAgAEEgTJAwIKCg0KBQQDAgAGEgTJAwsUCg0KBQQDAgABEgTJAxUZCg0KBQQD
AgADEgTJAxwdCgwKBAQDAgESBMoDAhoKDQoFBAMCAQQSBMoDAgoKDQoFBAMCAQUSBMoDCxAKDQoF
BAMCAQESBMoDERUKDQoFBAMCAQMSBMoDGBkKDAoEBAMCAhIEywMCIwoNCgUEAwICBBIEywMCCgoN
CgUEAwICBRIEywMLEAoNCgUEAwICARIEywMRHgoNCgUEAwICAxIEywMhIgoMCgQEAwIDEgTNAwIb
Cg0KBQQDAgMEEgTNAwIKCg0KBQQDAgMFEgTNAwsQCg0KBQQDAgMBEgTNAxEWCg0KBQQDAgMDEgTN
AxkaCgwKBAQDAgQSBM4DAiQKDQoFBAMCBAQSBM4DAgoKDQoFBAMCBAUSBM4DCxAKDQoFBAMCBAES
BM4DER8KDQoFBAMCBAMSBM4DIiMKDAoEBAMCBRIE0AMCHAoNCgUEAwIFBBIE0AMCCgoNCgUEAwIF
BRIE0AMLEAoNCgUEAwIFARIE0AMRFwoNCgUEAwIFAxIE0AMaGwoMCgQEAwIGEgTRAwIdCg0KBQQD
AgYEEgTRAwIKCg0KBQQDAgYFEgTRAwsQCg0KBQQDAgYBEgTRAxEYCg0KBQQDAgYDEgTRAxscCgwK
BAQDAgcSBNMDAiAKDQoFBAMCBwQSBNMDAgoKDQoFBAMCBwUSBNMDCxEKDQoFBAMCBwESBNMDEhsK
DQoFBAMCBwMSBNMDHh8KDAoEBAMCCBIE1QMCKAoNCgUEAwIIBBIE1QMCCgoNCgUEAwIIBRIE1QML
EQoNCgUEAwIIARIE1QMSIwoNCgUEAwIIAxIE1QMmJwoMCgQEAwIJEgTXAwIeCg0KBQQDAgkEEgTX
AwIKCg0KBQQDAgkFEgTXAwsRCg0KBQQDAgkBEgTXAxIYCg0KBQQDAgkDEgTXAxsdCgwKBAQDAgoS
BNkDAh0KDQoFBAMCCgQSBNkDAgoKDQoFBAMCCgUSBNkDCxEKDQoFBAMCCgESBNkDEhcKDQoFBAMC
CgMSBNkDGhwKDAoEBAMCCxIE2wMCJAoNCgUEAwILBBIE2wMCCgoNCgUEAwILBRIE2wMLEQoNCgUE
AwILARIE2wMSHgoNCgUEAwILAxIE2wMhIwrLAgoCBAQSBuUDAOcDARq8AiAgIFJvdyBpbiBhIFJl
c3VsdHNldAoKICAgYSByb3cgaXMgcmVwcmVzZW50ZWQgYXMgYSBsaXN0IG9mIGZpZWxkcyBlbmNv
ZGVkIGFzIGJ5dGUgYmxvYnMuCiAgIFZhbHVlIG9mIGVhY2ggZmllbGQgaXMgZW5jb2RlZCBhcyBz
ZXF1ZW5jZSBvZiBieXRlcyB1c2luZyBlbmNvZGluZyBhcHByb3ByaWF0ZSBmb3IgdGhlCiAgIHR5
cGUgb2YgdGhlIHZhbHVlIGdpdmVuIGJ5IGBgQ29sdW1uTWV0YWRhdGFgYCwgYXMgc3BlY2lmaWVk
CiAgIGluIHRoZSA6cHJvdG9idWY6bXNnOmBNeXNxbHguUmVzdWx0c2V0OjpDb2x1bW5NZXRhRGF0
YWAgZGVzY3JpcHRpb24uCgoKCwoDBAQBEgTlAwgLCgwKBAQEAgASBOYDAhsKDQoFBAQCAAQSBOYD
AgoKDQoFBAQCAAUSBOYDCxAKDQoFBAQCAAESBOYDERYKDQoFBAQCAAMSBOYDGRoK3w8KFG15c3Fs
eF9zZXNzaW9uLnByb3RvEg5NeXNxbHguU2Vzc2lvbiJTChFBdXRoZW50aWNhdGVTdGFydBIRCglt
ZWNoX25hbWUYASACKAkSEQoJYXV0aF9kYXRhGAIgASgMEhgKEGluaXRpYWxfcmVzcG9uc2UYAyAB
KAwiKQoUQXV0aGVudGljYXRlQ29udGludWUSEQoJYXV0aF9kYXRhGAEgAigMIiMKDkF1dGhlbnRp
Y2F0ZU9rEhEKCWF1dGhfZGF0YRgBIAEoDCIHCgVSZXNldCIHCgVDbG9zZUIeChxjb20ubXlzcWwu
Y2oubXlzcWx4LnByb3RvYnVmSt8NCgYSBAAARQEKyQMKAQISAxsIFhq+AyBNZXNzYWdlcyB0byBt
YW5hZ2UgU2Vzc2lvbnMKCiAuLiB1bWw6OgoKICAgPT0gc2Vzc2lvbiBzdGFydCA9PQogICBDbGll
bnQgLT4gU2VydmVyOiBBdXRoZW50aWNhdGVTdGFydAogICBvcHQKICAgU2VydmVyIC0tPiBDbGll
bnQ6IEF1dGhlbnRpY2F0ZUNvbnRpbnVlCiAgIENsaWVudCAtLT4gU2VydmVyOiBBdXRoZW50aWNh
dGVDb250aW51ZQogICBlbmQKICAgYWx0CiAgIFNlcnZlciAtLT4gQ2xpZW50OiBBdXRoZW50aWNh
dGVPawogICBlbHNlCiAgIFNlcnZlciAtLT4gQ2xpZW50OiBFcnJvcgogICBlbmQKICAgLi4uCiAg
ID09IHNlc3Npb24gcmVzZXQgPT0KICAgQ2xpZW50IC0+IFNlcnZlcjogUmVzZXQKICAgU2VydmVy
IC0tPiBDbGllbnQ6IE9rCiAgID09IHNlc3Npb24gZW5kID09CiAgIENsaWVudCAtPiBTZXJ2ZXI6
IENsb3NlCiAgIFNlcnZlciAtLT4gQ2xpZW50OiBPawoKCggKAQgSAxwANQoLCgQI5wcAEgMcADUK
DAoFCOcHAAISAxwHEwoNCgYI5wcAAgASAxwHEwoOCgcI5wcAAgABEgMcBxMKDAoFCOcHAAcSAxwW
NAqvAgoCBAASBCUAKQEaogIgdGhlIGluaXRpYWwgbWVzc2FnZSBzZW5kIGZyb20gdGhlIGNsaWVu
dCB0byB0aGUgc2VydmVyIHRvIHN0YXJ0IHRoZQogYXV0aGVudGljYXRpb24gcHJvY2Nlc3MKCiA6
cGFyYW0gbWVjaF9uYW1lOiBhdXRoZW50aWNhdGlvbiBtZWNoYW5pc20gbmFtZQogOnBhcmFtIGF1
dGhfZGF0YTogYXV0aGVudGljYXRpb24gZGF0YQogOnBhcmFtIGluaXRpYWxfcmVzcG9uc2U6IGlu
aXRpYWwgcmVzcG9uc2UKIDpSZXR1cm5zOiA6cHJvdG9idWY6bXNnOmBNeXNxbHguU2Vzc2lvbjo6
QXV0aGVudGljYXRlQ29udGludWVgCgoKCgMEAAESAyUIGQoLCgQEAAIAEgMmAiAKDAoFBAACAAQS
AyYCCgoMCgUEAAIABRIDJgsRCgwKBQQAAgABEgMmEhsKDAoFBAACAAMSAyYeHwoLCgQEAAIBEgMn
Ah8KDAoFBAACAQQSAycCCgoMCgUEAAIBBRIDJwsQCgwKBQQAAgEBEgMnERoKDAoFBAACAQMSAycd
HgoLCgQEAAICEgMoAiYKDAoFBAACAgQSAygCCgoMCgUEAAICBRIDKAsQCgwKBQQAAgIBEgMoESEK
DAoFBAACAgMSAygkJQrlAQoCBAESBDAAMgEa2AEgc2VuZCBieSBjbGllbnQgb3Igc2VydmVyIGFm
dGVyIGEgOnByb3RvYnVmOm1zZzpgTXlzcWx4LlNlc3Npb246OkF1dGhlbnRpY2F0ZVN0YXJ0YCB0
bwogZXhjaGFuZ2UgbW9yZSBhdXRoIGRhdGEKCiA6cGFyYW0gYXV0aF9kYXRhOiBhdXRoZW50aWNh
dGlvbiBkYXRhCiA6UmV0dXJuczogOnByb3RvYnVmOm1zZzpgTXlzcWx4LlNlc3Npb246OkF1dGhl
bnRpY2F0ZUNvbnRpbnVlYAoKCgoDBAEBEgMwCBwKCwoEBAECABIDMQIfCgwKBQQBAgAEEgMxAgoK
DAoFBAECAAUSAzELEAoMCgUEAQIAARIDMREaCgwKBQQBAgADEgMxHR4KaAoCBAISBDcAOQEaXCBz
ZW50IGJ5IHRoZSBzZXJ2ZXIgYWZ0ZXIgc3VjY2Vzc2Z1bCBhdXRoZW50aWNhdGlvbgoKIDpwYXJh
bSBhdXRoX2RhdGE6IGF1dGhlbnRpY2F0aW9uIGRhdGEKCgoKAwQCARIDNwgWCgsKBAQCAgASAzgC
HwoMCgUEAgIABBIDOAIKCgwKBQQCAgAFEgM4CxAKDAoFBAICAAESAzgRGgoMCgUEAgIAAxIDOB0e
Ck4KAgQDEgQ+AD8BGkIgcmVzZXQgdGhlIGN1cnJlbnQgc2Vzc2lvbgoKIDpSZXR1cm5zOiA6cHJv
dG9idWY6bXNnOmBNeXNxbHg6Ok9rYAoKCgoDBAMBEgM+CA0KTgoCBAQSBEQARQEaQiBjbG9zZSB0
aGUgY3VycmVudCBzZXNzaW9uCgogOlJldHVybnM6IDpwcm90b2J1Zjptc2c6YE15c3FseDo6T2tg
CgoKCgMEBAESA0QIDQrUHwoMbXlzcWx4LnByb3RvEgZNeXNxbHgaEG15c3FseF9zcWwucHJvdG8a
Fm15c3FseF9yZXN1bHRzZXQucHJvdG8aEW15c3FseF9jcnVkLnByb3RvGhRteXNxbHhfc2Vzc2lv
bi5wcm90bxoXbXlzcWx4X2Nvbm5lY3Rpb24ucHJvdG8aE215c3FseF9leHBlY3QucHJvdG8aE215
c3FseF9ub3RpY2UucHJvdG8itAIKDkNsaWVudE1lc3NhZ2VzIqECCgRUeXBlEhgKFENPTl9DQVBB
QklMSVRJRVNfR0VUEAESGAoUQ09OX0NBUEFCSUxJVElFU19TRVQQAhINCglDT05fQ0xPU0UQAxIb
ChdTRVNTX0FVVEhFTlRJQ0FURV9TVEFSVBAEEh4KGlNFU1NfQVVUSEVOVElDQVRFX0NPTlRJTlVF
EAUSDgoKU0VTU19SRVNFVBAGEg4KClNFU1NfQ0xPU0UQBxIUChBTUUxfU1RNVF9FWEVDVVRFEAwS
DQoJQ1JVRF9GSU5EEBESDwoLQ1JVRF9JTlNFUlQQEhIPCgtDUlVEX1VQREFURRATEg8KC0NSVURf
REVMRVRFEBQSDwoLRVhQRUNUX09QRU4QGBIQCgxFWFBFQ1RfQ0xPU0UQGSLiAgoOU2VydmVyTWVz
c2FnZXMizwIKBFR5cGUSBgoCT0sQABIJCgVFUlJPUhABEhUKEUNPTk5fQ0FQQUJJTElUSUVTEAIS
HgoaU0VTU19BVVRIRU5USUNBVEVfQ09OVElOVUUQAxIYChRTRVNTX0FVVEhFTlRJQ0FURV9PSxAE
EgoKBk5PVElDRRALEh4KGlJFU1VMVFNFVF9DT0xVTU5fTUVUQV9EQVRBEAwSEQoNUkVTVUxUU0VU
X1JPVxANEhgKFFJFU1VMVFNFVF9GRVRDSF9ET05FEA4SHQoZUkVTVUxUU0VUX0ZFVENIX1NVU1BF
TkRFRBAPEigKJFJFU1VMVFNFVF9GRVRDSF9ET05FX01PUkVfUkVTVUxUU0VUUxAQEhcKE1NRTF9T
VE1UX0VYRUNVVEVfT0sQERIoCiRSRVNVTFRTRVRfRkVUQ0hfRE9ORV9NT1JFX09VVF9QQVJBTVMQ
EiIRCgJPaxILCgNtc2cYASABKAkiiAEKBUVycm9yEi8KCHNldmVyaXR5GAEgASgOMhYuTXlzcWx4
LkVycm9yLlNldmVyaXR5OgVFUlJPUhIMCgRjb2RlGAIgAigNEhEKCXNxbF9zdGF0ZRgEIAIoCRIL
CgNtc2cYAyACKAkiIAoIU2V2ZXJpdHkSCQoFRVJST1IQABIJCgVGQVRBTBABQh4KHGNvbS5teXNx
bC5jai5teXNxbHgucHJvdG9idWZKyxcKBhIEAAB3AQoICgECEgMECA4KCAoBCBIDBQA1CgsKBAjn
BwASAwUANQoMCgUI5wcAAhIDBQcTCg0KBgjnBwACABIDBQcTCg4KBwjnBwACAAESAwUHEwoMCgUI
5wcABxIDBRY0CgkKAgMAEgMHBxkKCQoCAwESAwgHHwoJCgIDAhIDCQcaCgkKAgMDEgMKBx0KCQoC
AwQSAwsHIAoJCgIDBRIDDAccCgkKAgMGEgMNBxwK1QEKAgQAEgQjADgBGsgBIElEcyBvZiBtZXNz
YWdlcyB0aGF0IGNhbiBiZSBzZW50IGZyb20gY2xpZW50IHRvIHRoZSBzZXJ2ZXIKCiAuLiBub3Rl
OjoKICAgdGhpcyBtZXNzYWdlIGlzIG5ldmVyIHNlbnQgb24gdGhlIHdpcmUuIEl0IGlzIG9ubHkg
dXNlZCB0byBsZXQgYGBwcm90b2NgYAoKICAgKiBnZW5lcmF0ZSBjb25zdGFudHMKICAgKiBjaGVj
ayBmb3IgdW5pcXVlbmVzcwoKCgoDBAABEgMjCBYKDAoEBAAEABIEJAI3AwoMCgUEAAQAARIDJAcL
Cg0KBgQABAACABIDJQQdCg4KBwQABAACAAESAyUEGAoOCgcEAAQAAgACEgMlGxwKDQoGBAAEAAIB
EgMmBB0KDgoHBAAEAAIBARIDJgQYCg4KBwQABAACAQISAyYbHAoNCgYEAAQAAgISAycEEgoOCgcE
AAQAAgIBEgMnBA0KDgoHBAAEAAICAhIDJxARCg0KBgQABAACAxIDKQQgCg4KBwQABAACAwESAykE
GwoOCgcEAAQAAgMCEgMpHh8KDQoGBAAEAAIEEgMqBCQKDgoHBAAEAAIEARIDKgQeCg4KBwQABAAC
BAISAyoiIwoNCgYEAAQAAgUSAysEEwoOCgcEAAQAAgUBEgMrBA4KDgoHBAAEAAIFAhIDKxESCg0K
BgQABAACBhIDLAQTCg4KBwQABAACBgESAywEDgoOCgcEAAQAAgYCEgMsERIKDQoGBAAEAAIHEgMu
BBoKDgoHBAAEAAIHARIDLgQUCg4KBwQABAACBwISAy4XGQoNCgYEAAQAAggSAzAEEwoOCgcEAAQA
AggBEgMwBA0KDgoHBAAEAAIIAhIDMBASCg0KBgQABAACCRIDMQQVCg4KBwQABAACCQESAzEEDwoO
CgcEAAQAAgkCEgMxEhQKDQoGBAAEAAIKEgMyBBUKDgoHBAAEAAIKARIDMgQPCg4KBwQABAACCgIS
AzISFAoNCgYEAAQAAgsSAzMEFQoOCgcEAAQAAgsBEgMzBA8KDgoHBAAEAAILAhIDMxIUCg0KBgQA
BAACDBIDNQQVCg4KBwQABAACDAESAzUEDwoOCgcEAAQAAgwCEgM1EhQKDQoGBAAEAAINEgM2BBYK
DgoHBAAEAAINARIDNgQQCg4KBwQABAACDQISAzYTFQrRAQoCBAESBEEAVwEaxAEgSURzIG9mIG1l
c3NhZ2VzIHRoYXQgY2FuIGJlIHNlbnQgZnJvbSBzZXJ2ZXIgdG8gY2xpZW50CgogLi4gbm90ZTo6
CiAgIHRoaXMgbWVzc2FnZSBpcyBuZXZlciBzZW50IG9uIHRoZSB3aXJlLiBJdCBpcyBvbmx5IHVz
ZWQgdG8gbGV0IGBgcHJvdG9jYGAKCiAgICogZ2VuZXJhdGUgY29uc3RhbnRzCiAgICogY2hlY2sg
Zm9yIHVuaXF1ZW5lc3MKCgoKAwQBARIDQQgWCgwKBAQBBAASBEICVgMKDAoFBAEEAAESA0IHCwoN
CgYEAQQAAgASA0MECwoOCgcEAQQAAgABEgNDBAYKDgoHBAEEAAIAAhIDQwkKCg0KBgQBBAACARID
RAQOCg4KBwQBBAACAQESA0QECQoOCgcEAQQAAgECEgNEDA0KDQoGBAEEAAICEgNGBBoKDgoHBAEE
AAICARIDRgQVCg4KBwQBBAACAgISA0YYGQoNCgYEAQQAAgMSA0gEIwoOCgcEAQQAAgMBEgNIBB4K
DgoHBAEEAAIDAhIDSCEiCg0KBgQBBAACBBIDSQQdCg4KBwQBBAACBAESA0kEGAoOCgcEAQQAAgQC
EgNJGxwKMQoGBAEEAAIFEgNMBBAaIiBOT1RJQ0UgaGFzIHRvIHN0YXkgYXQgMTEgZm9yZXZlcgoK
DgoHBAEEAAIFARIDTAQKCg4KBwQBBAACBQISA0wNDwoNCgYEAQQAAgYSA04EJAoOCgcEAQQAAgYB
EgNOBB4KDgoHBAEEAAIGAhIDTiEjCg0KBgQBBAACBxIDTwQXCg4KBwQBBAACBwESA08EEQoOCgcE
AQQAAgcCEgNPFBYKDQoGBAEEAAIIEgNQBB4KDgoHBAEEAAIIARIDUAQYCg4KBwQBBAACCAISA1Ab
HQoNCgYEAQQAAgkSA1EEIwoOCgcEAQQAAgkBEgNRBB0KDgoHBAEEAAIJAhIDUSAiCg0KBgQBBAAC
ChIDUgQuCg4KBwQBBAACCgESA1IEKAoOCgcEAQQAAgoCEgNSKy0KDQoGBAEEAAILEgNUBB0KDgoH
BAEEAAILARIDVAQXCg4KBwQBBAACCwISA1QaHAoNCgYEAQQAAgwSA1UELgoOCgcEAQQAAgwBEgNV
BCgKDgoHBAEEAAIMAhIDVSstCiAKAgQCEgRbAF0BGhQgZ2VuZXJpYyBPayBtZXNzYWdlCgoKCgME
AgESA1sICgoLCgQEAgIAEgNcAhoKDAoFBAICAAQSA1wCCgoMCgUEAgIABRIDXAsRCgwKBQQCAgAB
EgNcEhUKDAoFBAICAAMSA1wYGQrZAwoCBAMSBG0AdwEazAMgZ2VuZXJpYyBFcnJvciBtZXNzYWdl
CgogQSBgYHNldmVyaXR5YGAgb2YgYGBFUlJPUmBgIGluZGljYXRlcyB0aGUgY3VycmVudCBtZXNz
YWdlIHNlcXVlbmNlIGlzCiBhYm9ydGVkIGZvciB0aGUgZ2l2ZW4gZXJyb3IgYW5kIHRoZSBzZXNz
aW9uIGlzIHJlYWR5IGZvciBtb3JlLgoKIEluIGNhc2Ugb2YgYSBgYEZBVEFMYGAgZXJyb3IgbWVz
c2FnZSB0aGUgY2xpZW50IHNob3VsZCBub3QgZXhwZWN0CiB0aGUgc2VydmVyIHRvIGNvbnRpbnVl
IGhhbmRsaW5nIGFueSBmdXJ0aGVyIG1lc3NhZ2VzIGFuZCBzaG91bGQKIGNsb3NlIHRoZSBjb25u
ZWN0aW9uLgoKIDpwYXJhbSBzZXZlcml0eTogc2V2ZXJpdHkgb2YgdGhlIGVycm9yIG1lc3NhZ2UK
IDpwYXJhbSBjb2RlOiBlcnJvci1jb2RlCiA6cGFyYW0gc3FsX3N0YXRlOiBTUUwgc3RhdGUKIDpw
YXJhbSBtc2c6IGh1bWFuIHJlYWRhYmxlIGVycm9yIG1lc3NhZ2UKCgoKAwQDARIDbQgNCgsKBAQD
AgASA24CNQoMCgUEAwIABBIDbgIKCgwKBQQDAgAGEgNuCxMKDAoFBAMCAAESA24UHAoMCgUEAwIA
AxIDbh8gCgwKBQQDAgAIEgNuITQKDAoFBAMCAAcSA24tMgoLCgQEAwIBEgNvAhsKDAoFBAMCAQQS
A28CCgoMCgUEAwIBBRIDbwsRCgwKBQQDAgEBEgNvEhYKDAoFBAMCAQMSA28ZGgoLCgQEAwICEgNw
AiAKDAoFBAMCAgQSA3ACCgoMCgUEAwICBRIDcAsRCgwKBQQDAgIBEgNwEhsKDAoFBAMCAgMSA3Ae
HwoLCgQEAwIDEgNxAhoKDAoFBAMCAwQSA3ECCgoMCgUEAwIDBRIDcQsRCgwKBQQDAgMBEgNxEhUK
DAoFBAMCAwMSA3EYGQoMCgQEAwQAEgRzAnYDCgwKBQQDBAABEgNzBw8KDQoGBAMEAAIAEgN0BA4K
DgoHBAMEAAIAARIDdAQJCg4KBwQDBAACAAISA3QMDQoNCgYEAwQAAgESA3UEDgoOCgcEAwQAAgEB
EgN1BAkKDgoHBAMEAAIBAhIDdQwN

EOD


$gpd->map(
    {
      'pb_prefix' => 'Mysqlx',
      'prefix' => 'Mysqlx'
    },
);

undef $gpd;

1;


__END__

=head1 NAME

Mysqlx - Perl implementation of MySQL's X Protocol and DevAPI

=head1 SYNOPSIS

  use Mysqlx;
  ...

=head1 DESCRIPTION

Not much here yet, but I'd like to be able to do MySQL's X Protocol from Perl.
For now, most experimenting is in play/test-dynamic.pl
and there's a decoding proxy in play/mysqlx-proxy.pl .

=head1 AUTHOR

Scott Lanning E<lt>slanning@cpan.orgE<gt>

For licensing info, see F<LICENSE>.

=cut
